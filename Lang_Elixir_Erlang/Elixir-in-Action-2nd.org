#+TITLE: Elixir in Action
#+VERSION: 2nd
#+AUTHOR: Saša Jurić
#+Foreword by: José Valim
#+STARTUP: entitiespretty

* Table of Contents                                      :TOC_4_org:noexport:
- [[Preface - xiii][Preface - xiii]]
- [[acknowledgments - xv][acknowledgments - xv]]
- [[about this book - xvii][about this book - xvii]]
- [[about the author - xxi][about the author - xxi]]
- [[about the cover illustration - xxii][about the cover illustration - xxii]]
- [[1 First steps - 1][1 First steps - 1]]
  - [[1.1 About Erlang - 1][1.1 About Erlang - 1]]
    - [[High availability - 3][High availability - 3]]
    - [[Erlang concurrency - 3][Erlang concurrency - 3]]
    - [[Server-side systems - 5][Server-side systems - 5]]
    - [[The development platform - 7][The development platform - 7]]
  - [[1.2 About Elixir - 8][1.2 About Elixir - 8]]
    - [[Code simplification - 9][Code simplification - 9]]
    - [[Composing functions - 12][Composing functions - 12]]
    - [[The big picture - 13][The big picture - 13]]
  - [[1.3 Disadvantages - 13][1.3 Disadvantages - 13]]
    - [[Speed - 14][Speed - 14]]
    - [[Ecosystem - 14][Ecosystem - 14]]
- [[2 Building blocks - 16][2 Building blocks - 16]]
  - [[2.1 The interactive shell - 17][2.1 The interactive shell - 17]]
  - [[2.2 Working with variables - 18][2.2 Working with variables - 18]]
  - [[2.3 Organizing your code - 20][2.3 Organizing your code - 20]]
    - [[Modules - 20][Modules - 20]]
    - [[Functions - 21][Functions - 21]]
    - [[Function arity - 25][Function arity - 25]]
    - [[Function visibility - 26][Function visibility - 26]]
    - [[Imports and aliases - 27][Imports and aliases - 27]]
    - [[Module attributes - 28][Module attributes - 28]]
    - [[Comments - 30][Comments - 30]]
  - [[2.4 Understanding the type system - 30][2.4 Understanding the type system - 30]]
    - [[Numbers - 30][Numbers - 30]]
    - [[Atoms - 31][Atoms - 31]]
    - [[Tuples - 34][Tuples - 34]]
    - [[Lists - 35][Lists - 35]]
    - [[Immutability - 38][Immutability - 38]]
    - [[Maps - 41][Maps - 41]]
    - [[Binaries and bitstrings - 43][Binaries and bitstrings - 43]]
    - [[Strings - 44][Strings - 44]]
    - [[First-class functions - 46][First-class functions - 46]]
    - [[Other built-in types - 49][Other built-in types - 49]]
    - [[Higher-level types - 50][Higher-level types - 50]]
    - [[IO lists - 54][IO lists - 54]]
  - [[2.5 Operators - 55][2.5 Operators - 55]]
  - [[2.6 Macros - 56][2.6 Macros - 56]]
  - [[2.7 Understanding the runtime - 57][2.7 Understanding the runtime - 57]]
    - [[Modules and functions in the runtime - 57][Modules and functions in the runtime - 57]]
    - [[Starting the runtime - 59][Starting the runtime - 59]]
- [[3 Control flow - 63][3 Control flow - 63]]
  - [[3.1 Pattern matching - 64][3.1 Pattern matching - 64]]
    - [[The match operator - 64][The match operator - 64]]
    - [[Matching tuples - 64][Matching tuples - 64]]
    - [[Matching constants - 65][Matching constants - 65]]
    - [[Variables in patterns - 66][Variables in patterns - 66]]
    - [[Matching lists - 67][Matching lists - 67]]
    - [[Matching maps - 68][Matching maps - 68]]
    - [[Matching bitstrings and binaries 69][Matching bitstrings and binaries 69]]
    - [[Compound matches - 71][Compound matches - 71]]
    - [[General behavior - 72][General behavior - 72]]
  - [[3.2 Matching with functions - 72][3.2 Matching with functions - 72]]
    - [[Multiclause functions - 73][Multiclause functions - 73]]
    - [[Guards - 76][Guards - 76]]
    - [[Multiclause lambdas - 78][Multiclause lambdas - 78]]
  - [[3.3 Conditionals - 79][3.3 Conditionals - 79]]
    - [[Branching with multiclause functions - 79][Branching with multiclause functions - 79]]
    - [[Classical branching constructs - 81][Classical branching constructs - 81]]
    - [[The with special form - 83][The with special form - 83]]
  - [[3.4 Loops and iterations - 86][3.4 Loops and iterations - 86]]
    - [[Iterating with recursion - 87][Iterating with recursion - 87]]
    - [[Tail function calls - 88][Tail function calls - 88]]
    - [[Higher-order functions - 91][Higher-order functions - 91]]
    - [[Comprehensions 95][Comprehensions 95]]
    - [[Streams - 97][Streams - 97]]
- [[4 Data abstractions - 102][4 Data abstractions - 102]]
  - [[4.1 Abstracting with modules - 104][4.1 Abstracting with modules - 104]]
    - [[Basic abstraction - 104][Basic abstraction - 104]]
    - [[Composing abstractions - 106][Composing abstractions - 106]]
    - [[Structuring data with maps - 107][Structuring data with maps - 107]]
    - [[Abstracting with structs - 108][Abstracting with structs - 108]]
    - [[Data transparency - 112][Data transparency - 112]]
  - [[4.2 Working with hierarchical data - 114][4.2 Working with hierarchical data - 114]]
    - [[Generating IDs - 115][Generating IDs - 115]]
    - [[Updating entries - 117][Updating entries - 117]]
    - [[Immutable hierarchical updates - 119][Immutable hierarchical updates - 119]]
    - [[Iterative updates - 121][Iterative updates - 121]]
    - [[Exercise: importing from a file - 122][Exercise: importing from a file - 122]]
  - [[4.3 Polymorphism with protocols - 124][4.3 Polymorphism with protocols - 124]]
    - [[Protocol basics - 124][Protocol basics - 124]]
    - [[Implementing a protocol - 125][Implementing a protocol - 125]]
    - [[Built-in protocols - 126][Built-in protocols - 126]]
- [[5 Concurrency primitives - 129][5 Concurrency primitives - 129]]
  - [[5.1 Concurrency in BEAM - 130][5.1 Concurrency in BEAM - 130]]
  - [[5.2 Working with processes - 132][5.2 Working with processes - 132]]
    - [[Creating processes - 133][Creating processes - 133]]
    - [[Message passing - 134][Message passing - 134]]
  - [[5.3 Stateful server processes - 139][5.3 Stateful server processes - 139]]
    - [[Server processes - 139][Server processes - 139]]
    - [[Keeping a process state - 144][Keeping a process state - 144]]
    - [[Mutable state - 145][Mutable state - 145]]
    - [[Complex states - 148][Complex states - 148]]
    - [[Registered processes - 152][Registered processes - 152]]
  - [[5.4 Runtime considerations - 153][5.4 Runtime considerations - 153]]
    - [[A process is sequential - 153][A process is sequential - 153]]
    - [[Unlimited process mailboxes - 155][Unlimited process mailboxes - 155]]
    - [[Shared-nothing concurrency - 156][Shared-nothing concurrency - 156]]
    - [[Scheduler inner workings - 157][Scheduler inner workings - 157]]
- [[6 Generic server processes - 159][6 Generic server processes - 159]]
  - [[6.1 Building a generic server process - 160][6.1 Building a generic server process - 160]]
    - [[Plugging in with modules - 160][Plugging in with modules - 160]]
    - [[Implementing the generic code - 161][Implementing the generic code - 161]]
    - [[Using the generic abstraction - 162][Using the generic abstraction - 162]]
    - [[Supporting asynchronous requests - 164][Supporting asynchronous requests - 164]]
    - [[Exercise: refactoring the to-do server - 166][Exercise: refactoring the to-do server - 166]]
  - [[6.2 Using GenServer - 166][6.2 Using GenServer - 166]]
    - [[OTP behaviours - 167][OTP behaviours - 167]]
    - [[Plugging into GenServer - 168][Plugging into GenServer - 168]]
    - [[Handling requests - 169][Handling requests - 169]]
    - [[Handling plain messages - 170][Handling plain messages - 170]]
    - [[Other GenServer features - 172][Other GenServer features - 172]]
    - [[Process lifecycle - 175][Process lifecycle - 175]]
    - [[OTP-compliant processes - 176][OTP-compliant processes - 176]]
    - [[Exercise: GenServer-powered to-do server - 177][Exercise: GenServer-powered to-do server - 177]]
- [[7 Building a concurrent system - 179][7 Building a concurrent system - 179]]
  - [[7.1 Working with the mix project - 180][7.1 Working with the mix project - 180]]
  - [[7.2 Managing multiple to-do lists - 182][7.2 Managing multiple to-do lists - 182]]
    - [[Implementing a cache - 182][Implementing a cache - 182]]
    - [[Writing tests - 185][Writing tests - 185]]
    - [[Analyzing process dependencies - 188][Analyzing process dependencies - 188]]
  - [[7.3 Persisting data - 189][7.3 Persisting data - 189]]
    - [[Encoding and persisting - 189][Encoding and persisting - 189]]
    - [[Using the database - 191][Using the database - 191]]
    - [[Analyzing the system - 194][Analyzing the system - 194]]
    - [[Addressing the process bottleneck - 195][Addressing the process bottleneck - 195]]
    - [[Exercise: pooling and synchronizing - 198][Exercise: pooling and synchronizing - 198]]
  - [[7.4 Reasoning with processes - 199][7.4 Reasoning with processes - 199]]
- [[8 Fault-tolerance basics - 201][8 Fault-tolerance basics - 201]]
  - [[8.1 Runtime errors - 202][8.1 Runtime errors - 202]]
    - [[Error types - 203][Error types - 203]]
    - [[Handling errors - 204][Handling errors - 204]]
  - [[8.2 Errors in concurrent systems - 207][8.2 Errors in concurrent systems - 207]]
    - [[Linking processes - 208][Linking processes - 208]]
    - [[Monitors - 210][Monitors - 210]]
  - [[8.3 Supervisors - 211][8.3 Supervisors - 211]]
    - [[Preparing the existing code - 213][Preparing the existing code - 213]]
    - [[Starting the supervisor process - 214][Starting the supervisor process - 214]]
    - [[Child specification - 216][Child specification - 216]]
    - [[Wrapping the supervisor 218][Wrapping the supervisor 218]]
    - [[Using a callback module - 218][Using a callback module - 218]]
    - [[Linking all processes - 219][Linking all processes - 219]]
    - [[Restart frequency - 222][Restart frequency - 222]]
- [[9 Isolating error effects - 224][9 Isolating error effects - 224]]
  - [[9.1 Supervision trees - 225][9.1 Supervision trees - 225]]
    - [[Separating loosely dependent parts - 225][Separating loosely dependent parts - 225]]
    - [[Rich process discovery - 228][Rich process discovery - 228]]
    - [[Via tuples - 230][Via tuples - 230]]
    - [[Registering database workers - 232][Registering database workers - 232]]
    - [[Supervising database workers - 234][Supervising database workers - 234]]
    - [[Organizing the supervision tree - 237][Organizing the supervision tree - 237]]
  - [[9.2 Starting processes dynamically - 241][9.2 Starting processes dynamically - 241]]
    - [[Registering to-do servers - 241][Registering to-do servers - 241]]
    - [[Dynamic supervision - 242][Dynamic supervision - 242]]
    - [[Finding to-do servers - 243][Finding to-do servers - 243]]
    - [[Using temporary restart strategy - 244][Using temporary restart strategy - 244]]
    - [[Testing the system - 245][Testing the system - 245]]
  - [[9.3 "Let it crash" - 246][9.3 "Let it crash" - 246]]
    - [[Processes that shouldn't crash - 247][Processes that shouldn't crash - 247]]
    - [[Handling expected errors - 248][Handling expected errors - 248]]
    - [[Preserving the state - 249][Preserving the state - 249]]
- [[10 Beyond GenServer - 251][10 Beyond GenServer - 251]]
  - [[10.1 Tasks - 252][10.1 Tasks - 252]]
    - [[Awaited tasks - 252][Awaited tasks - 252]]
    - [[Non-awaited tasks - 254][Non-awaited tasks - 254]]
  - [[10.2 Agents 256 Basic use - 256][10.2 Agents 256 Basic use - 256]]
    - [[Agents and concurrency - 257][Agents and concurrency - 257]]
    - [[Agent-powered to-do server - 259][Agent-powered to-do server - 259]]
    - [[Limitations of agents - 260][Limitations of agents - 260]]
  - [[10.3 ETS tables - 263][10.3 ETS tables - 263]]
    - [[Basic operations - 265][Basic operations - 265]]
    - [[ETS powered key/value store - 268][ETS powered key/value store - 268]]
    - [[Other ETS operations - 271][Other ETS operations - 271]]
    - [[Exercise: process registry - 274][Exercise: process registry - 274]]
- [[11 Working with components - 277][11 Working with components - 277]]
  - [[11.1 OTP applications - 278][11.1 OTP applications - 278]]
    - [[Creating applications with the mix tool - 278][Creating applications with the mix tool - 278]]
    - [[The application behavior - 280][The application behavior - 280]]
    - [[Starting the application - 280][Starting the application - 280]]
    - [[Library applications - 281][Library applications - 281]]
    - [[Creating a to-do application - 282][Creating a to-do application - 282]]
    - [[The application folder structure - 284][The application folder structure - 284]]
  - [[11.2 Working with dependencies - 286][11.2 Working with dependencies - 286]]
    - [[Adding a dependency - 286][Adding a dependency - 286]]
    - [[Adapting the pool - 287][Adapting the pool - 287]]
    - [[Visualizing the system - 289][Visualizing the system - 289]]
  - [[11.3 Building a web server - 291][11.3 Building a web server - 291]]
    - [[Choosing dependencies - 291][Choosing dependencies - 291]]
    - [[Starting the server - 292][Starting the server - 292]]
    - [[Handling requests - 293][Handling requests - 293]]
    - [[Reasoning about the system - 296][Reasoning about the system - 296]]
  - [[11.4 Configuring applications - 300][11.4 Configuring applications - 300]]
    - [[Application environment - 300][Application environment - 300]]
    - [[Varying configuration - 301][Varying configuration - 301]]
    - [[Config script considerations - 303][Config script considerations - 303]]
- [[12 Building a distributed system - 305][12 Building a distributed system - 305]]
  - [[12.1 Distribution primitives - 307][12.1 Distribution primitives - 307]]
    - [[Starting a cluster - 307][Starting a cluster - 307]]
    - [[Communicating between nodes - 309][Communicating between nodes - 309]]
    - [[Process discovery - 311][Process discovery - 311]]
    - [[Links and monitors - 314][Links and monitors - 314]]
    - [[Other distribution services - 315][Other distribution services - 315]]
  - [[12.2 Building a fault-tolerant cluster - 317][12.2 Building a fault-tolerant cluster - 317]]
    - [[Cluster design - 318][Cluster design - 318]]
    - [[The distributed to-do cache - 318][The distributed to-do cache - 318]]
    - [[Implementing a replicated database - 323][Implementing a replicated database - 323]]
    - [[Testing the system - 326][Testing the system - 326]]
    - [[Detecting partitions - 327][Detecting partitions - 327]]
    - [[Highly available systems - 329][Highly available systems - 329]]
  - [[12.3 Network considerations - 330][12.3 Network considerations - 330]]
    - [[Node names - 330][Node names - 330]]
    - [[Cookies - 331][Cookies - 331]]
    - [[Hidden nodes - 331][Hidden nodes - 331]]
    - [[Firewalls - 332][Firewalls - 332]]
- [[13 Running the system - 334][13 Running the system - 334]]
  - [[13.1 Running a system with Elixir tools - 335][13.1 Running a system with Elixir tools - 335]]
    - [[Using the mix and elixir commands - 335][Using the mix and elixir commands - 335]]
    - [[Running scripts - 337][Running scripts - 337]]
    - [[Compiling for production - 338][Compiling for production - 338]]
  - [[13.2 OTP releases - 339][13.2 OTP releases - 339]]
    - [[Building a release with distillery - 340][Building a release with distillery - 340]]
    - [[Using a release - 341][Using a release - 341]]
    - [[Release contents - 343][Release contents - 343]]
  - [[13.3 Analyzing system behavior - 346][13.3 Analyzing system behavior - 346]]
    - [[Debugging - 347][Debugging - 347]]
    - [[Logging - 348][Logging - 348]]
    - [[Interacting with the system - 348][Interacting with the system - 348]]
    - [[Tracing - 350][Tracing - 350]]
- [[index - 353][index - 353]]

* Preface - xiii
* acknowledgments - xv
* about this book - xvii
* about the author - xxi
* about the cover illustration - xxii
* 1 First steps - 1
** 1.1 About Erlang - 1
*** High availability - 3
*** Erlang concurrency - 3
*** Server-side systems - 5
*** The development platform - 7

** 1.2 About Elixir - 8
*** Code simplification - 9
*** Composing functions - 12
*** The big picture - 13

** 1.3 Disadvantages - 13
*** Speed - 14
*** Ecosystem - 14

* 2 Building blocks - 16
** 2.1 The interactive shell - 17
** 2.2 Working with variables - 18
** 2.3 Organizing your code - 20
*** Modules - 20
*** Functions - 21
*** Function arity - 25
*** Function visibility - 26
*** Imports and aliases - 27
*** Module attributes - 28
*** Comments - 30

** 2.4 Understanding the type system - 30 
*** Numbers - 30
*** Atoms - 31
*** Tuples - 34
*** Lists - 35
*** Immutability - 38
*** Maps - 41
*** Binaries and bitstrings - 43
*** Strings - 44
*** First-class functions - 46
*** Other built-in types - 49
*** Higher-level types - 50
*** IO lists - 54

** 2.5 Operators - 55
** 2.6 Macros - 56
** 2.7 Understanding the runtime - 57 
*** Modules and functions in the runtime - 57
*** Starting the runtime - 59

* 3 Control flow - 63
** 3.1 Pattern matching - 64
*** The match operator - 64
*** Matching tuples - 64
*** Matching constants - 65
*** Variables in patterns - 66
*** Matching lists - 67
*** Matching maps - 68
*** Matching bitstrings and binaries 69 
*** Compound matches - 71
*** General behavior - 72

** 3.2 Matching with functions - 72
*** Multiclause functions - 73
*** Guards - 76
*** Multiclause lambdas - 78

** 3.3 Conditionals - 79
*** Branching with multiclause functions - 79
*** Classical branching constructs - 81
*** The with special form - 83

** 3.4 Loops and iterations - 86
*** Iterating with recursion - 87
*** Tail function calls - 88
*** Higher-order functions - 91
*** Comprehensions 95 
*** Streams - 97

* 4 Data abstractions - 102
** 4.1 Abstracting with modules - 104
*** Basic abstraction - 104
*** Composing abstractions - 106
*** Structuring data with maps - 107
*** Abstracting with structs - 108
*** Data transparency - 112

** 4.2 Working with hierarchical data - 114
*** Generating IDs - 115
*** Updating entries - 117
*** Immutable hierarchical updates - 119
*** Iterative updates - 121
*** Exercise: importing from a file - 122
    
** 4.3 Polymorphism with protocols - 124
*** Protocol basics - 124
*** Implementing a protocol - 125
*** Built-in protocols - 126

* 5 Concurrency primitives - 129
** 5.1 Concurrency in BEAM - 130
** 5.2 Working with processes - 132
*** Creating processes - 133
*** Message passing - 134

** 5.3 Stateful server processes - 139
*** Server processes - 139
*** Keeping a process state - 144
*** Mutable state - 145
*** Complex states - 148
*** Registered processes - 152

** 5.4 Runtime considerations - 153
*** A process is sequential - 153
*** Unlimited process mailboxes - 155
*** Shared-nothing concurrency - 156
*** Scheduler inner workings - 157

* 6 Generic server processes - 159
** 6.1 Building a generic server process - 160
*** Plugging in with modules - 160
*** Implementing the generic code - 161
*** Using the generic abstraction - 162
*** Supporting asynchronous requests - 164
*** Exercise: refactoring the to-do server - 166

** 6.2 Using GenServer - 166
*** OTP behaviours - 167
*** Plugging into GenServer - 168
*** Handling requests - 169
*** Handling plain messages - 170
*** Other GenServer features - 172
*** Process lifecycle - 175
*** OTP-compliant processes - 176
*** Exercise: GenServer-powered to-do server - 177

* 7 Building a concurrent system - 179
** 7.1 Working with the mix project - 180
** 7.2 Managing multiple to-do lists - 182
*** Implementing a cache - 182
*** Writing tests - 185
*** Analyzing process dependencies - 188

** 7.3 Persisting data - 189
*** Encoding and persisting - 189
*** Using the database - 191
*** Analyzing the system - 194
*** Addressing the process bottleneck - 195
*** Exercise: pooling and synchronizing - 198

** 7.4 Reasoning with processes - 199

* 8 Fault-tolerance basics - 201 
** 8.1 Runtime errors - 202
*** Error types - 203
*** Handling errors - 204

** 8.2 Errors in concurrent systems - 207
*** Linking processes - 208
*** Monitors - 210

** 8.3 Supervisors - 211 
*** Preparing the existing code - 213
*** Starting the supervisor process - 214
*** Child specification - 216
*** Wrapping the supervisor 218 
*** Using a callback module - 218
*** Linking all processes - 219
*** Restart frequency - 222

* 9 Isolating error effects - 224
** 9.1 Supervision trees - 225
*** Separating loosely dependent parts - 225
*** Rich process discovery - 228
*** Via tuples - 230
*** Registering database workers - 232
*** Supervising database workers - 234
*** Organizing the supervision tree - 237

** 9.2 Starting processes dynamically - 241 
*** Registering to-do servers - 241
*** Dynamic supervision - 242
*** Finding to-do servers - 243
*** Using temporary restart strategy - 244
*** Testing the system - 245

** 9.3 "Let it crash" - 246
*** Processes that shouldn't crash - 247
*** Handling expected errors - 248
*** Preserving the state - 249

* 10 Beyond GenServer - 251
** 10.1 Tasks - 252
*** Awaited tasks - 252
*** Non-awaited tasks - 254

** 10.2 Agents 256 Basic use - 256 
*** Agents and concurrency - 257
*** Agent-powered to-do server - 259
*** Limitations of agents - 260

** 10.3 ETS tables - 263
*** Basic operations - 265
*** ETS powered key/value store - 268
*** Other ETS operations - 271
*** Exercise: process registry - 274
 
* 11 Working with components - 277
** 11.1 OTP applications - 278
*** Creating applications with the mix tool - 278
*** The application behavior - 280
*** Starting the application - 280
*** Library applications - 281
*** Creating a to-do application - 282
*** The application folder structure - 284

** 11.2 Working with dependencies - 286
*** Adding a dependency - 286
*** Adapting the pool - 287
*** Visualizing the system - 289

** 11.3 Building a web server - 291
*** Choosing dependencies - 291
*** Starting the server - 292
*** Handling requests - 293
*** Reasoning about the system - 296

** 11.4 Configuring applications - 300
*** Application environment - 300
*** Varying configuration - 301
*** Config script considerations - 303

* 12 Building a distributed system - 305
** 12.1 Distribution primitives - 307
*** Starting a cluster - 307
*** Communicating between nodes - 309
*** Process discovery - 311
*** Links and monitors - 314
*** Other distribution services - 315

** 12.2 Building a fault-tolerant cluster - 317
*** Cluster design - 318
*** The distributed to-do cache - 318
*** Implementing a replicated database - 323
*** Testing the system - 326
*** Detecting partitions - 327
*** Highly available systems - 329

** 12.3 Network considerations - 330
*** Node names - 330
*** Cookies - 331
*** Hidden nodes - 331
*** Firewalls - 332

* 13 Running the system - 334
** 13.1 Running a system with Elixir tools - 335
*** Using the mix and elixir commands - 335
*** Running scripts - 337
*** Compiling for production - 338

** 13.2 OTP releases - 339
*** Building a release with distillery - 340
*** Using a release - 341
*** Release contents - 343

** 13.3 Analyzing system behavior - 346
*** Debugging - 347
*** Logging - 348
*** Interacting with the system - 348
*** Tracing - 350

* index - 353
