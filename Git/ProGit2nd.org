#+TITLE: Pro Git
#+Version: 2nd
#+AUTHOR: Scott Chacon and Ben Straub
#+STARTUP: overview
#+STARTUP: entitiespretty

* Table of Contents                                      :TOC_4_org:noexport:
- [[About the Authors][About the Authors]]
- [[Preface by Scoot Chacon][Preface by Scoot Chacon]]
- [[Preface by Ben Straub][Preface by Ben Straub]]
- [[1. Getting Started][1. Getting Started]]
  - [[1.1 About Version Control][1.1 About Version Control]]
    - [[Local Version Control Systems][Local Version Control Systems]]
    - [[Centralized Version Control Systems][Centralized Version Control Systems]]
    - [[Distributed Version Control Systems][Distributed Version Control Systems]]
  - [[1.2 A Short History of Git][1.2 A Short History of Git]]
  - [[1.3 Git Basics][1.3 Git Basics]]
    - [[Snapshots, Not Differences][Snapshots, Not Differences]]
    - [[Nearly Every Operation Is Local][Nearly Every Operation Is Local]]
    - [[Git Has Integrity][Git Has Integrity]]
    - [[Git Generally Only Adds Data][Git Generally Only Adds Data]]
    - [[The Three States][The Three States]]
  - [[1.4 The Command Line][1.4 The Command Line]]
  - [[1.5 Installing Git][1.5 Installing Git]]
    - [[Installing on Linux][Installing on Linux]]
    - [[Installing on Mac][Installing on Mac]]
    - [[Installing on Windows][Installing on Windows]]
  - [[1.6 First-Time Git Setup][1.6 First-Time Git Setup]]
    - [[Your Identity][Your Identity]]
    - [[Your Editor][Your Editor]]
    - [[Checking Your Settings][Checking Your Settings]]
  - [[1.7 Getting Help][1.7 Getting Help]]
  - [[1.8 Summary][1.8 Summary]]
- [[2. Git Basics][2. Git Basics]]
  - [[2.1 Getting a Git Repository][2.1 Getting a Git Repository]]
    - [[Initializing a Repository in an Existing Directory][Initializing a Repository in an Existing Directory]]
    - [[Cloning an Existing Repository][Cloning an Existing Repository]]
  - [[2.2 Recording Changes to the Repository][2.2 Recording Changes to the Repository]]
    - [[Checking the Status of Your Files][Checking the Status of Your Files]]
    - [[Tracking New Files][Tracking New Files]]
    - [[Staging Modified Files][Staging Modified Files]]
    - [[Short Status][Short Status]]
    - [[Ignoring Files][Ignoring Files]]
    - [[Viewing Your Staged and Unstaged Changes][Viewing Your Staged and Unstaged Changes]]
    - [[Committing Your Changes][Committing Your Changes]]
    - [[Skipping the Staging Area][Skipping the Staging Area]]
    - [[Removing Files][Removing Files]]
    - [[Moving Files][Moving Files]]
  - [[2.3 Viewing the Commit History][2.3 Viewing the Commit History]]
    - [[Limiting Log Output][Limiting Log Output]]
  - [[2.4 Undoing Things][2.4 Undoing Things]]
    - [[Unstaging a Staged File][Unstaging a Staged File]]
    - [[Unmodifying a Modified File][Unmodifying a Modified File]]
  - [[2.5 Working with Remotes][2.5 Working with Remotes]]
    - [[Showing Your Remotes][Showing Your Remotes]]
    - [[Adding Remote Repositories][Adding Remote Repositories]]
    - [[Fetching and Pulling from Your Remotes][Fetching and Pulling from Your Remotes]]
    - [[Pushing to Your Remotes][Pushing to Your Remotes]]
    - [[Inspecting a Remote][Inspecting a Remote]]
    - [[Removing and Renaming Remotes][Removing and Renaming Remotes]]
  - [[2.6 Tagging][2.6 Tagging]]
    - [[Listing Your Tags][Listing Your Tags]]
    - [[Creating Tags][Creating Tags]]
    - [[Annotated Tags][Annotated Tags]]
    - [[Lightweight Tags][Lightweight Tags]]
    - [[Tagging Later][Tagging Later]]
    - [[Sharing Tags][Sharing Tags]]
  - [[2.7 Git Aliases][2.7 Git Aliases]]
  - [[2.8 Summary][2.8 Summary]]
- [[3. Git Branching][3. Git Branching]]
  - [[3.1 Branches in a Nutshell][3.1 Branches in a Nutshell]]
    - [[Creating a New Branch][Creating a New Branch]]
    - [[Switching Branches][Switching Branches]]
  - [[3.2 Basic Branching and Merging][3.2 Basic Branching and Merging]]
    - [[Basic Branching][Basic Branching]]
    - [[Basic Merging][Basic Merging]]
    - [[Basic Merge Conflicts][Basic Merge Conflicts]]
  - [[3.3 Branch Management][3.3 Branch Management]]
  - [[3.4 Branching Workflows][3.4 Branching Workflows]]
    - [[Long-Running Branches][Long-Running Branches]]
    - [[Topic Branches][Topic Branches]]
  - [[3.5 Remote Branches][3.5 Remote Branches]]
    - [[Pushing][Pushing]]
    - [[Tracking Branches][Tracking Branches]]
    - [[Pulling][Pulling]]
    - [[Deleting Remote Branches][Deleting Remote Branches]]
  - [[3.6 Rebasing][3.6 Rebasing]]
    - [[The Basic Rebase][The Basic Rebase]]
    - [[More Interesting Rebases][More Interesting Rebases]]
    - [[The Perils of Rebasing][The Perils of Rebasing]]
    - [[Rebase When You Rebase][Rebase When You Rebase]]
    - [[Rebase vs. Merge][Rebase vs. Merge]]
  - [[3.7 Summary][3.7 Summary]]
- [[4. Git on the Server][4. Git on the Server]]
  - [[4.1 The Protocols][4.1 The Protocols]]
    - [[Local Protocol][Local Protocol]]
      - [[The Pros][The Pros]]
      - [[The Cons][The Cons]]
    - [[The HTTP Protocol][The HTTP Protocol]]
      - [[Smart HTTP][Smart HTTP]]
      - [[Dumb HTTP][Dumb HTTP]]
    - [[The SSH Protocol][The SSH Protocol]]
      - [[The Pros][The Pros]]
      - [[The Cons][The Cons]]
    - [[The Git Protocol][The Git Protocol]]
      - [[The Pros][The Pros]]
      - [[The Cons][The Cons]]
  - [[4.2 Getting Git on a Server][4.2 Getting Git on a Server]]
    - [[Putting the Bare Repository on a Server][Putting the Bare Repository on a Server]]
    - [[Small Setups][Small Setups]]
      - [[SSH Access][SSH Access]]
  - [[4.3 Generating Your SSH Public Key][4.3 Generating Your SSH Public Key]]
  - [[4.4 Setting Up the Server][4.4 Setting Up the Server]]
  - [[4.5 Git Daemon][4.5 Git Daemon]]
  - [[4.6 Smart HTTP][4.6 Smart HTTP]]
  - [[4.7 GitWeb][4.7 GitWeb]]
  - [[4.8 GitLab][4.8 GitLab]]
    - [[Installation][Installation]]
    - [[Administration][Administration]]
    - [[Users][Users]]
    - [[Groups][Groups]]
    - [[Projects][Projects]]
    - [[Hooks][Hooks]]
    - [[Basic Usage][Basic Usage]]
    - [[Working Together][Working Together]]
  - [[4.9 Third Party Hosted Options][4.9 Third Party Hosted Options]]
  - [[4.10 Summary][4.10 Summary]]
- [[5. Distributed Git][5. Distributed Git]]
  - [[5.1 Distributed Workflows][5.1 Distributed Workflows]]
    - [[Centralized Workflow][Centralized Workflow]]
    - [[Integration-Manager Workflow][Integration-Manager Workflow]]
    - [[Dictator and Lieutenants Workflow][Dictator and Lieutenants Workflow]]
    - [[Workflows Summary][Workflows Summary]]
  - [[5.2 Contributing to a Project][5.2 Contributing to a Project]]
    - [[Commit Guidelines][Commit Guidelines]]
    - [[Private Small Team][Private Small Team]]
    - [[Private Managed Team][Private Managed Team]]
    - [[Public Project, Fork][Public Project, Fork]]
    - [[Public Project, E-Mail][Public Project, E-Mail]]
    - [[Summary][Summary]]
  - [[5.3 Maintaining a Project][5.3 Maintaining a Project]]
    - [[Working in Topic Branches][Working in Topic Branches]]
    - [[Applying Patches from E-mail][Applying Patches from E-mail]]
      - [[Applying a Patch with apply][Applying a Patch with apply]]
      - [[Applying a Patch with am][Applying a Patch with am]]
      - [[Checking Out Remote Branches][Checking Out Remote Branches]]
    - [[Determining What Is Introduced][Determining What Is Introduced]]
    - [[Integrating Contributed Work][Integrating Contributed Work]]
      - [[Merging Workflows][Merging Workflows]]
    - [[Large-Merging Workflows][Large-Merging Workflows]]
    - [[Rebasing and Cherry Picking Workflows][Rebasing and Cherry Picking Workflows]]
    - [[Rerere][Rerere]]
    - [[Tagging Your Releases][Tagging Your Releases]]
    - [[Generating a Build Number][Generating a Build Number]]
    - [[Preparing a Release][Preparing a Release]]
    - [[The Shortlog][The Shortlog]]
  - [[5.4 Summary][5.4 Summary]]
- [[6. GitHub][6. GitHub]]
  - [[6.1 Account Setup and Configuration][6.1 Account Setup and Configuration]]
    - [[SSH Access][SSH Access]]
    - [[Your Avatar][Your Avatar]]
    - [[Your Email Address][Your Email Address]]
    - [[Two-Factor Authentication][Two-Factor Authentication]]
  - [[6.2 Contributing to a Project][6.2 Contributing to a Project]]
    - [[Forking Projects][Forking Projects]]
    - [[The GitHub Flow][The GitHub Flow]]
    - [[Creating a Pull Request][Creating a Pull Request]]
    - [[Iterating on a Pull Request][Iterating on a Pull Request]]
    - [[Advanced Pull Requests][Advanced Pull Requests]]
      - [[Pull Requests as Patches][Pull Requests as Patches]]
      - [[Keeping up with Upstream][Keeping up with Upstream]]
      - [[References][References]]
      - [[Markdown][Markdown]]
      - [[GitHub Flavored Markdown][GitHub Flavored Markdown]]
  - [[6.3 Maintaining a Project][6.3 Maintaining a Project]]
    - [[Creating a New Repository][Creating a New Repository]]
    - [[Adding Collaborators][Adding Collaborators]]
    - [[Managing Pull Requests][Managing Pull Requests]]
      - [[Email Notifications][Email Notifications]]
      - [[Collaborating on the Pull Request][Collaborating on the Pull Request]]
      - [[Pull Request Refs][Pull Request Refs]]
      - [[Pull Requests on PUll Requests][Pull Requests on PUll Requests]]
    - [[Mentions and Notifications][Mentions and Notifications]]
      - [[The Notifications Page][The Notifications Page]]
    - [[Special Files][Special Files]]
      - [[README][README]]
      - [[CONTRIBUTING][CONTRIBUTING]]
    - [[Project Administration][Project Administration]]
      - [[Changing the Default Branch][Changing the Default Branch]]
      - [[Transferring a Project][Transferring a Project]]
  - [[6.4 Managing an organization][6.4 Managing an organization]]
    - [[Organization Basics][Organization Basics]]
    - [[Teams][Teams]]
    - [[Audit Log][Audit Log]]
  - [[6.5 Scripting GitHub][6.5 Scripting GitHub]]
    - [[Hooks][Hooks]]
      - [[Services][Services]]
      - [[Hooks][Hooks]]
    - [[The GitHub API][The GitHub API]]
      - [[Basic Usage][Basic Usage]]
      - [[Commenting on an Issu][Commenting on an Issu]]
    - [[Octokit][Octokit]]
  - [[6.6 Summary][6.6 Summary]]
- [[7. Git Tools][7. Git Tools]]
  - [[7.1 Revision Selection][7.1 Revision Selection]]
  - [[7.2 Interactive Staging][7.2 Interactive Staging]]
  - [[7.3 Stashing and Cleaning][7.3 Stashing and Cleaning]]
  - [[7.4 Signing Your Work][7.4 Signing Your Work]]
  - [[7.5 Searching][7.5 Searching]]
  - [[7.6 Rewriting History][7.6 Rewriting History]]
  - [[7.7 Reset Demystified][7.7 Reset Demystified]]
  - [[7.8 Advanced Merging][7.8 Advanced Merging]]
  - [[7.9 Rerere][7.9 Rerere]]
  - [[7.10 Debugging with Git][7.10 Debugging with Git]]
  - [[7.11 Submodules][7.11 Submodules]]
  - [[7.12 Bundling][7.12 Bundling]]
  - [[7.13 Replace][7.13 Replace]]
  - [[7.14 Credential Storage][7.14 Credential Storage]]
  - [[7.15 Summary][7.15 Summary]]
- [[8. Customizing Git][8. Customizing Git]]
  - [[8.1 Git Configuration][8.1 Git Configuration]]
  - [[8.2 Git Attributes][8.2 Git Attributes]]
  - [[8.3 Git Hooks][8.3 Git Hooks]]
  - [[8.4 An Example Git-Enforced Policy][8.4 An Example Git-Enforced Policy]]
  - [[8.5 Summary][8.5 Summary]]
- [[9. Git and Other Systems][9. Git and Other Systems]]
  - [[9.1 Git as a Client][9.1 Git as a Client]]
    - [[Git and Subversion][Git and Subversion]]
      - [[~git svn~][~git svn~]]
      - [[Setting Up][Setting Up]]
      - [[Getting Started][Getting Started]]
      - [[Committing Back to Subversion][Committing Back to Subversion]]
      - [[Pulling in New Changes][Pulling in New Changes]]
      - [[Git Branching Issues][Git Branching Issues]]
      - [[Subversion Branching][Subversion Branching]]
      - [[Subversion Commands][Subversion Commands]]
      - [[Ignoring What Subversion Ignores][Ignoring What Subversion Ignores]]
      - [[Git-Svn Summary][Git-Svn Summary]]
    - [[Git and Mercurial][Git and Mercurial]]
      - [[Getting Started][Getting Started]]
      - [[Workflow][Workflow]]
      - [[Branches and Bookmarks][Branches and Bookmarks]]
      - [[Mercurial Summary][Mercurial Summary]]
    - [[Git and Perforce][Git and Perforce]]
      - [[Git Fusion][Git Fusion]]
      - [[Git-p4][Git-p4]]
      - [[Git and Perforce Summary][Git and Perforce Summary]]
  - [[9.2 Migrating to Git][9.2 Migrating to Git]]
    - [[Subversion][Subversion]]
    - [[Mercurial][Mercurial]]
    - [[Perforce][Perforce]]
      - [[Perforce Git Fusion][Perforce Git Fusion]]
    - [[A Custom Importer][A Custom Importer]]
  - [[9.3 Summary][9.3 Summary]]
- [[10. Git Internals][10. Git Internals]]
  - [[10.1 Plumbing and Porcelain][10.1 Plumbing and Porcelain]]
  - [[10.2 Git Objects][10.2 Git Objects]]
    - [[Tree Objects][Tree Objects]]
    - [[Commit Objects][Commit Objects]]
    - [[Object Storage][Object Storage]]
  - [[10.3 Git References][10.3 Git References]]
    - [[The HEAD][The HEAD]]
    - [[Tags][Tags]]
    - [[Remotes][Remotes]]
  - [[10.4 Packfiles][10.4 Packfiles]]
  - [[10.5 The Refspec][10.5 The Refspec]]
    - [[Pushing Refspecs][Pushing Refspecs]]
    - [[Deleting References][Deleting References]]
  - [[10.6 Transfer Protocols][10.6 Transfer Protocols]]
    - [[The Dumb Protocol][The Dumb Protocol]]
    - [[The Smart Protocol][The Smart Protocol]]
      - [[Uploading Data][Uploading Data]]
      - [[Downloading Data][Downloading Data]]
    - [[Protocol Summary][Protocol Summary]]
  - [[10.7 Maintenance and Data Recovery][10.7 Maintenance and Data Recovery]]
    - [[Maintenance][Maintenance]]
    - [[Data Recovery][Data Recovery]]
    - [[Removing Objects][Removing Objects]]
  - [[10.8 Environment Variables][10.8 Environment Variables]]
    - [[Global Behavior][Global Behavior]]
    - [[Repository Locations][Repository Locations]]
    - [[Pathspecs][Pathspecs]]
    - [[Committing][Committing]]
    - [[Networking][Networking]]
    - [[Diffing and Merging][Diffing and Merging]]
    - [[Debugging][Debugging]]
    - [[Miscellaneous][Miscellaneous]]
  - [[10.9 Summary][10.9 Summary]]
- [[Appendix A: Git in Other Environments][Appendix A: Git in Other Environments]]
  - [[Graphical Interfaces][Graphical Interfaces]]
    - [[gitk and git-gui][gitk and git-gui]]
    - [[GitHub for Mac and Windows][GitHub for Mac and Windows]]
      - [[Installation][Installation]]
      - [[Recommended Workflow][Recommended Workflow]]
    - [[Summary][Summary]]
  - [[Other GUIs][Other GUIs]]
  - [[Git in Visual Studio][Git in Visual Studio]]
  - [[Git in Eclipse][Git in Eclipse]]
  - [[Git in Bash][Git in Bash]]
  - [[Git in Zsh][Git in Zsh]]
  - [[Git in Powershell][Git in Powershell]]
  - [[Summary][Summary]]
- [[Appendix B: Embedding Git in your Applications][Appendix B: Embedding Git in your Applications]]
  - [[Command-line Git][Command-line Git]]
  - [[Libgit2][Libgit2]]
    - [[Advanced Functionality][Advanced Functionality]]
    - [[Other Bindings][Other Bindings]]
      - [[LibGit2Sharp][LibGit2Sharp]]
      - [[objective-git][objective-git]]
      - [[pygit2][pygit2]]
    - [[Further Reading][Further Reading]]
- [[Appendix C: Git Commands][Appendix C: Git Commands]]
  - [[Setup and Config][Setup and Config]]
    - [[~git config~][~git config~]]
    - [[~git help~][~git help~]]
  - [[Getting and Creating Projects][Getting and Creating Projects]]
    - [[~git init~][~git init~]]
    - [[~git clone~][~git clone~]]
  - [[Basic Snapshotting][Basic Snapshotting]]
    - [[~git add~][~git add~]]
    - [[~git status~][~git status~]]
    - [[~git diff~][~git diff~]]
    - [[~git difftool~][~git difftool~]]
    - [[~git commit~][~git commit~]]
    - [[~git reset~][~git reset~]]
    - [[~git rm~][~git rm~]]
    - [[~git mv~][~git mv~]]
    - [[~git clean~][~git clean~]]
  - [[Branching and Merging][Branching and Merging]]
    - [[~git branch~][~git branch~]]
    - [[~git checkout~][~git checkout~]]
    - [[~git merge~][~git merge~]]
    - [[~git mergetool~][~git mergetool~]]
    - [[~git log~][~git log~]]
    - [[~git stash~][~git stash~]]
    - [[~git tag~][~git tag~]]
  - [[Sharing and Updating Projects][Sharing and Updating Projects]]
    - [[~git fetch~][~git fetch~]]
    - [[~git pull~][~git pull~]]
    - [[~git push~][~git push~]]
    - [[~git remote~][~git remote~]]
    - [[~git archive~][~git archive~]]
    - [[~git submodule~][~git submodule~]]
  - [[Inspection and Comparison][Inspection and Comparison]]
    - [[~git show~][~git show~]]
    - [[~git shortlog~][~git shortlog~]]
    - [[~git describe~][~git describe~]]
  - [[Debugging][Debugging]]
    - [[~git bisect~][~git bisect~]]
    - [[~git blame~][~git blame~]]
    - [[~git grep~][~git grep~]]
  - [[Patching][Patching]]
    - [[~git cherry-pick~][~git cherry-pick~]]
    - [[~git rebase~][~git rebase~]]
    - [[~git revert~][~git revert~]]
  - [[Email][Email]]
    - [[~git apply~][~git apply~]]
    - [[~git am~][~git am~]]
    - [[~git format-patch~][~git format-patch~]]
    - [[~git send-email~][~git send-email~]]
    - [[~git request-pull~][~git request-pull~]]
  - [[External Systems][External Systems]]
    - [[~git svn~][~git svn~]]
    - [[~git fast-import~][~git fast-import~]]
  - [[Administration][Administration]]
    - [[~git gc~][~git gc~]]
    - [[~git fsck~][~git fsck~]]
    - [[~git reflog~][~git reflog~]]
    - [[~git filter-branch~][~git filter-branch~]]
  - [[Plumbing Commands][Plumbing Commands]]

* About the Authors
* Preface by Scoot Chacon
* Preface by Ben Straub
* TODO 1. Getting Started
** TODO 1.1 About Version Control
*** TODO Local Version Control Systems
*** TODO Centralized Version Control Systems
*** TODO Distributed Version Control Systems

** DONE 1.2 A Short History of Git
   CLOSED: [2017-07-14 Fri 05:26]
   Birth in 2005
** DONE 1.3 Git Basics
   CLOSED: [2017-07-14 Fri 05:05]
*** DONE Snapshots, Not Differences
    CLOSED: [2017-07-14 Fri 04:18]
    - /The other VCS/ (/Subversion/ and friends included) store info as a list of
      file-based changes.

      These systems (CVS, Subversion, Perforce, Bazaar, and so on) think of the
      info they keep as a set of files and the changes made to each file over
      time.

    - /Git/ thinks about its data more like a _stream of snapshots_.
      NO-change files won't be save again, only create a link to it.

*** DONE Nearly Every Operation Is Local
    CLOSED: [2017-07-14 Fri 04:21]
    This is also the main difference between /Git/ and the other VCS's.

*** DONE Git Has Integrity
    CLOSED: [2017-07-14 Fri 04:37]
    - Everything in Git is _check-summed_ before it is stored and is then
      referred to by that /checksum/ -- impossible to make change without Git
      knowing about it.

    - Git uses SHA-1 hash for this checksumming (40-character hex).

*** DONE Git Generally Only Adds Data
    CLOSED: [2017-07-14 Fri 04:42]
    As in any VCS, you can lose or mess up changes you haven't committed yet;
    but after you commit a snapshot into Git, it is very difficult to lose.

    =TODO= Any exception.

*** DONE The Three States
    CLOSED: [2017-07-14 Fri 05:05]
    Git has _THREE_ main states that your file can reside in:
    + /committed/ :: the data is safely stored in your local database.
    + /modified/ :: file(s) has/have been changed but _NOT_ committed.
    + /staged/ :: marked a /modified/ file in its current version to go
                  into your next commit snapshot.

    See Figure 1-6. (page 8)

    This leads us to the three main sections of a Git project:
    + the =.git= directory (Repository):
      _where_ Git stores the metadata and object database for your project.
      This is _the most important part_ of Git, and it is what is copied when you
      clone a repository from another computer.

    + the working directory:
      a single checkout of one version of the project.
      These files are pulled out of the compressed database in the Git directory
      and placed on disk for you to use or modify.

    + the staging area:
      a file, generally contained in your =.git= directory, that stores
      information about what will go into your next commit. It's sometimes
      referred to as the "index", but it's also common to refer to it as the
      staging area.

** DONE 1.4 The Command Line
   CLOSED: [2017-07-14 Fri 05:10]
   For this book, we will be using Git on the command line.

** DONE 1.5 Installing Git
   CLOSED: [2017-07-14 Fri 05:10]
   This book was written using Git version 2.0.0.
   Any version after 2.0 should work just fine.

*** Installing on Linux
*** Installing on Mac
*** Installing on Windows

** DONE 1.6 First-Time Git Setup
   CLOSED: [2017-07-14 Fri 05:21]
*** DONE Your Identity
    CLOSED: [2017-07-14 Fri 05:15]
    #+BEGIN_SRC bash
      git config --global user.name "John Doe"
      git config --global user.email johndoe@example.com
    #+END_SRC

    Run with ~--global~ to override the ~config~ in a local project.

*** DONE Your Editor
    CLOSED: [2017-07-14 Fri 05:20]
    #+BEGIN_SRC bash
      git config --global core.editor emacs
      # or
      git config --global core.editor vim
    #+END_SRC
    =Me= I think no one needd a local editor setting.

*** DONE Checking Your Settings
    CLOSED: [2017-07-14 Fri 05:21]
    #+BEGIN_SRC bash
      git config --list
      # user.name=John Doe
      # user.email=johndoe@example.com
      # color.status=auto
      # color.branch=auto
      # color.interactive=auto
      # color.diff=auto
      # ...

      git config user.name
      # John Doe
    #+END_SRC
** DONE 1.7 Getting Help
   CLOSED: [2017-07-14 Fri 05:13]
   #+BEGIN_SRC bash
     git help <verb>
     git <verb> --help
     man git-<verb>
   #+END_SRC

   You can also try the =#git= or =#github= channel on the Freenode IRC server
   (irc. freenode.net).

** DONE 1.8 Summary
   CLOSED: [2017-07-14 Fri 05:14]

* TODO 2. Git Basics
** DONE 2.1 Getting a Git Repository
   CLOSED: [2017-07-15 Sat 14:07]
   Two main approaches:
   1. The first takes an existing project or directory and imports it into Git.
   2. The second clones an existing Git repository from another server.

*** DONE Initializing a Repository in an Existing Directory
    CLOSED: [2017-07-15 Sat 14:07]
    - ~git init~
      =TODO= What files are in the =.git= folder.

    - Add and commit:
      #+BEGIN_SRC bash
        git add *.c
        git add LICENSE
        git commit -m 'initial project version'
      #+END_SRC

*** DONE Cloning an Existing Repository
    CLOSED: [2017-07-15 Sat 14:07]
    ~git clone <from> [<to>]~

** TODO 2.2 Recording Changes to the Repository
*** TODO Checking the Status of Your Files
*** TODO Tracking New Files
*** TODO Staging Modified Files
*** TODO Short Status
*** TODO Ignoring Files
*** TODO Viewing Your Staged and Unstaged Changes
*** TODO Committing Your Changes
*** TODO Skipping the Staging Area
*** TODO Removing Files
*** TODO Moving Files
** TODO 2.3 Viewing the Commit History
*** TODO Limiting Log Output
** TODO 2.4 Undoing Things
*** TODO Unstaging a Staged File
*** TODO Unmodifying a Modified File
** TODO 2.5 Working with Remotes
*** TODO Showing Your Remotes
*** TODO Adding Remote Repositories
*** TODO Fetching and Pulling from Your Remotes
*** TODO Pushing to Your Remotes
*** TODO Inspecting a Remote
*** TODO Removing and Renaming Remotes

** TODO 2.6 Tagging
*** TODO Listing Your Tags
*** TODO Creating Tags
*** TODO Annotated Tags
*** TODO Lightweight Tags
*** TODO Tagging Later
*** TODO Sharing Tags
** TODO 2.7 Git Aliases
** TODO 2.8 Summary

* TODO 3. Git Branching
** TODO 3.1 Branches in a Nutshell
*** TODO Creating a New Branch
*** TODO Switching Branches
** TODO 3.2 Basic Branching and Merging
*** TODO Basic Branching
*** TODO Basic Merging
*** TODO Basic Merge Conflicts
** TODO 3.3 Branch Management
** TODO 3.4 Branching Workflows
*** TODO Long-Running Branches
*** TODO Topic Branches
** TODO 3.5 Remote Branches
*** TODO Pushing
*** TODO Tracking Branches
*** TODO Pulling
*** TODO Deleting Remote Branches
** TODO 3.6 Rebasing
*** TODO The Basic Rebase
*** TODO More Interesting Rebases
*** TODO The Perils of Rebasing
*** TODO Rebase When You Rebase
*** TODO Rebase vs. Merge
** 3.7 Summary

* TODO 4. Git on the Server
** TODO 4.1 The Protocols
*** TODO Local Protocol
**** The Pros
**** The Cons
*** TODO The HTTP Protocol
**** Smart HTTP
**** Dumb HTTP
***** The Pros
***** The Cons
*** TODO The SSH Protocol
**** The Pros
**** The Cons
*** TODO The Git Protocol
**** The Pros
**** The Cons
** TODO 4.2 Getting Git on a Server
*** TODO Putting the Bare Repository on a Server
*** TODO Small Setups
**** TODO SSH Access
** TODO 4.3 Generating Your SSH Public Key
** TODO 4.4 Setting Up the Server
** TODO 4.5 Git Daemon
** TODO 4.6 Smart HTTP
** TODO 4.7 GitWeb
** TODO 4.8 GitLab
*** TODO Installation
*** TODO Administration
*** TODO Users
*** TODO Groups
*** TODO Projects
*** TODO Hooks
*** TODO Basic Usage
*** TODO Working Together
** TODO 4.9 Third Party Hosted Options
** TODO 4.10 Summary

* TODO 5. Distributed Git
** TODO 5.1 Distributed Workflows
*** TODO Centralized Workflow
*** TODO Integration-Manager Workflow
*** TODO Dictator and Lieutenants Workflow
*** TODO Workflows Summary

** TODO 5.2 Contributing to a Project
*** TODO Commit Guidelines
*** TODO Private Small Team
*** TODO Private Managed Team
*** TODO Public Project, Fork
*** TODO Public Project, E-Mail
*** TODO Summary
** TODO 5.3 Maintaining a Project
*** TODO Working in Topic Branches
*** TODO Applying Patches from E-mail
**** Applying a Patch with apply
**** Applying a Patch with am
**** Checking Out Remote Branches
*** TODO Determining What Is Introduced
*** TODO Integrating Contributed Work
**** Merging Workflows
*** TODO Large-Merging Workflows
*** TODO Rebasing and Cherry Picking Workflows
*** TODO Rerere
*** TODO Tagging Your Releases
*** TODO Generating a Build Number
*** TODO Preparing a Release
*** TODO The Shortlog
** TODO 5.4 Summary

* TODO 6. GitHub
** TODO 6.1 Account Setup and Configuration
*** TODO SSH Access
*** TODO Your Avatar
*** TODO Your Email Address
*** TODO Two-Factor Authentication
** TODO 6.2 Contributing to a Project
*** TODO Forking Projects
*** TODO The GitHub Flow
*** TODO Creating a Pull Request
*** TODO Iterating on a Pull Request
*** TODO Advanced Pull Requests
**** Pull Requests as Patches
**** Keeping up with Upstream
**** References
**** Markdown
**** GitHub Flavored Markdown
***** Task Lists
***** Code Snippets
***** Quoting
***** Emoji
***** Images
** TODO 6.3 Maintaining a Project
*** TODO Creating a New Repository
*** TODO Adding Collaborators
*** TODO Managing Pull Requests
**** Email Notifications
**** Collaborating on the Pull Request
**** Pull Request Refs
**** Pull Requests on PUll Requests
*** TODO Mentions and Notifications
**** The Notifications Page
***** Web Notifications
***** Email Notifications
*** TODO Special Files
**** README
**** CONTRIBUTING
*** TODO Project Administration
**** Changing the Default Branch
**** Transferring a Project
** TODO 6.4 Managing an organization
*** TODO Organization Basics
*** TODO Teams
*** TODO Audit Log
** TODO 6.5 Scripting GitHub
*** TODO Hooks
**** Services
**** Hooks
*** TODO The GitHub API
**** Basic Usage
**** Commenting on an Issu
*** TODO Octokit
** TODO 6.6 Summary

* 7. Git Tools
** 7.1 Revision Selection
** 7.2 Interactive Staging
** 7.3 Stashing and Cleaning
** 7.4 Signing Your Work
** 7.5 Searching
** 7.6 Rewriting History
** 7.7 Reset Demystified
** 7.8 Advanced Merging
** 7.9 Rerere
** 7.10 Debugging with Git
** 7.11 Submodules
** 7.12 Bundling
** 7.13 Replace
** 7.14 Credential Storage
** 7.15 Summary

* 8. Customizing Git
** 8.1 Git Configuration
** 8.2 Git Attributes
** 8.3 Git Hooks
** 8.4 An Example Git-Enforced Policy
** 8.5 Summary

* TODO 9. Git and Other Systems
** TODO 9.1 Git as a Client
*** TODO Git and Subversion
**** ~git svn~
**** Setting Up
**** Getting Started
**** Committing Back to Subversion
**** Pulling in New Changes
**** Git Branching Issues
**** Subversion Branching
***** Creating a New SVN Branch
***** Switching Active Branches 
**** Subversion Commands
***** SVN Style History
***** SVN Annotation
***** SVN Server Information
**** Ignoring What Subversion Ignores
**** Git-Svn Summary

*** TODO Git and Mercurial
**** Getting Started
**** Workflow
**** Branches and Bookmarks
**** Mercurial Summary
*** TODO Git and Perforce
**** Git Fusion
***** Setting Up
***** Fusion Configuration
***** Workflow
***** Git-Fusion Summary
**** Git-p4
***** Setting Up
***** Getting Started
***** Workflow
***** Branching
**** Git and Perforce Summary
** TODO 9.2 Migrating to Git
*** TODO Subversion
*** TODO Mercurial
*** TODO Perforce
**** TODO Perforce Git Fusion
*** TODO A Custom Importer
** TODO 9.3 Summary

* TODO 10. Git Internals
** TODO 10.1 Plumbing and Porcelain
** TODO 10.2 Git Objects
*** TODO Tree Objects
*** TODO Commit Objects
*** TODO Object Storage

** TODO 10.3 Git References
*** TODO The HEAD
*** TODO Tags
*** TODO Remotes
** TODO 10.4 Packfiles
** TODO 10.5 The Refspec
*** TODO Pushing Refspecs
*** TODO Deleting References
** TODO 10.6 Transfer Protocols
*** TODO The Dumb Protocol
*** TODO The Smart Protocol
**** TODO Uploading Data
***** TODO SSH
***** TODO HTTP(S)
**** TODO Downloading Data
***** TODO SSH
***** TODO HTTP(S)
*** TODO Protocol Summary
** TODO 10.7 Maintenance and Data Recovery
*** TODO Maintenance
*** TODO Data Recovery
*** TODO Removing Objects
** TODO 10.8 Environment Variables
*** TODO Global Behavior
*** TODO Repository Locations
*** TODO Pathspecs
*** TODO Committing
*** TODO Networking
*** TODO Diffing and Merging
*** TODO Debugging
*** TODO Miscellaneous
** TODO 10.9 Summary

* TODO Appendix A: Git in Other Environments
** TODO Graphical Interfaces
*** TODO gitk and git-gui
*** TODO GitHub for Mac and Windows
**** TODO Installation
**** TODO Recommended Workflow
*** TODO Summary
** TODO Other GUIs
** TODO Git in Visual Studio
** TODO Git in Eclipse
** TODO Git in Bash
** TODO Git in Zsh
** TODO Git in Powershell
** TODO Summary

* TODO Appendix B: Embedding Git in your Applications
** TODO Command-line Git
** TODO Libgit2
*** TODO Advanced Functionality
*** TODO Other Bindings
**** LibGit2Sharp
**** objective-git
**** pygit2
*** TODO Further Reading
* TODO Appendix C: Git Commands
** TODO Setup and Config
*** TODO ~git config~
*** TODO ~git help~
** TODO Getting and Creating Projects
*** TODO ~git init~
*** TODO ~git clone~
** TODO Basic Snapshotting
*** TODO ~git add~
*** TODO ~git status~
*** TODO ~git diff~
*** TODO ~git difftool~
*** TODO ~git commit~
*** TODO ~git reset~
*** TODO ~git rm~
*** TODO ~git mv~
*** TODO ~git clean~
** TODO Branching and Merging
*** TODO ~git branch~
*** TODO ~git checkout~
*** TODO ~git merge~
*** TODO ~git mergetool~
*** TODO ~git log~
*** TODO ~git stash~
*** TODO ~git tag~

** TODO Sharing and Updating Projects
*** TODO ~git fetch~
*** TODO ~git pull~
*** TODO ~git push~
*** TODO ~git remote~
*** TODO ~git archive~
*** TODO ~git submodule~
** TODO Inspection and Comparison
*** TODO ~git show~
*** TODO ~git shortlog~
*** TODO ~git describe~
** TODO Debugging
*** TODO ~git bisect~
*** TODO ~git blame~
*** TODO ~git grep~
** TODO Patching
*** TODO ~git cherry-pick~
*** TODO ~git rebase~
*** TODO ~git revert~
** TODO Email
*** TODO ~git apply~
*** TODO ~git am~
*** TODO ~git format-patch~
*** TODO ~git send-email~
*** TODO ~git request-pull~
** TODO External Systems
*** TODO ~git svn~
*** TODO ~git fast-import~
** TODO Administration
*** TODO ~git gc~
*** TODO ~git fsck~
*** TODO ~git reflog~
*** TODO ~git filter-branch~
** TODO Plumbing Commands
