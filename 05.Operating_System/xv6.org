#+TITLE: xv6
#+SUBTITLE: a simple, Unix-like teaching operating system
#+VERSION: Draft as of August 29, 2017
#+AUTHOR: Russ Cox, Frans Kaashoek, Robert Morris
#+STARTUP: overview
#+STARTUP: entitiespretty

* Table of Contents                                      :TOC_4_org:noexport:
- [[0 Operating system interfaces - 7][0 Operating system interfaces - 7]]
  - [[Processes and memory - 8][Processes and memory - 8]]
  - [[I/O and File descriptors - 10][I/O and File descriptors - 10]]
  - [[Pipes - 13][Pipes - 13]]
  - [[File system - 14][File system - 14]]
  - [[Real world - 16][Real world - 16]]
- [[1 Operating system organization - 17][1 Operating system organization - 17]]
  - [[Abstracting physical resources - 17][Abstracting physical resources - 17]]
  - [[User mode, kernel mode, and system calls - 18][User mode, kernel mode, and system calls - 18]]
  - [[Kernel organization - 19][Kernel organization - 19]]
  - [[Process overview - 20][Process overview - 20]]
  - [[Code: the first address space - 22][Code: the first address space - 22]]
  - [[Code: creating the first process - 23][Code: creating the first process - 23]]
  - [[Code: Running the first process - 25][Code: Running the first process - 25]]
  - [[The first system call: exec - 26][The first system call: exec - 26]]
  - [[Real world - 27][Real world - 27]]
  - [[Exercises - 27][Exercises - 27]]
- [[2 Page tables - 29][2 Page tables - 29]]
  - [[Paging hardware - 29][Paging hardware - 29]]
  - [[Process address space - 30][Process address space - 30]]
  - [[Code: creating an address space - 32][Code: creating an address space - 32]]
  - [[Physical memory allocation - 32][Physical memory allocation - 32]]
  - [[Code: Physical memory allocator - 33][Code: Physical memory allocator - 33]]
  - [[User part of an address space - 34][User part of an address space - 34]]
  - [[Code: sbrk - 34][Code: sbrk - 34]]
  - [[Code: exec - 35][Code: exec - 35]]
  - [[Real world - 36][Real world - 36]]
  - [[Exercises - 37][Exercises - 37]]
- [[3 Traps, interrupts, and drivers - 39][3 Traps, interrupts, and drivers - 39]]
  - [[Systems calls, exceptions, and interrupts - 39][Systems calls, exceptions, and interrupts - 39]]
  - [[X86 protection - 40][X86 protection - 40]]
  - [[Code: The first system call - 41][Code: The first system call - 41]]
  - [[Code: Assembly trap handlers - 42][Code: Assembly trap handlers - 42]]
  - [[Code: C trap handler - 44][Code: C trap handler - 44]]
  - [[Code: System calls - 44][Code: System calls - 44]]
  - [[Code: Interrupts - 45][Code: Interrupts - 45]]
  - [[Drivers - 46][Drivers - 46]]
  - [[Code: Disk driver - 47][Code: Disk driver - 47]]
  - [[Real world - 48][Real world - 48]]
  - [[Exercises - 49][Exercises - 49]]
- [[4 Locking - 51][4 Locking - 51]]
  - [[Race conditions - 51][Race conditions - 51]]
  - [[Code: Locks - 53][Code: Locks - 53]]
  - [[Code: Using locks - 54][Code: Using locks - 54]]
  - [[Deadlock and lock ordering - 55][Deadlock and lock ordering - 55]]
  - [[Interrupt handlers - 56][Interrupt handlers - 56]]
  - [[Instruction and memory ordering - 57][Instruction and memory ordering - 57]]
  - [[Sellp locks - 57][Sellp locks - 57]]
  - [[Limitations of locks - 58][Limitations of locks - 58]]
  - [[Real world - 59][Real world - 59]]
  - [[Exercises - 59][Exercises - 59]]
- [[5 Scheduling - 61][5 Scheduling - 61]]
  - [[Multiplexing - 61][Multiplexing - 61]]
  - [[Code: Context switch - 62][Code: Context switch - 62]]
  - [[Code: Scheduling - 63][Code: Scheduling - 63]]
  - [[Code: mycpu and myproc - 65][Code: mycpu and myproc - 65]]
  - [[Sleep and wakeup - 65][Sleep and wakeup - 65]]
  - [[Code: Sleep and wakeup - 69][Code: Sleep and wakeup - 69]]
  - [[Code: Pipe - 70][Code: Pipe - 70]]
  - [[Code: Wait, exit, and kill - 71][Code: Wait, exit, and kill - 71]]
  - [[Real words - 72][Real words - 72]]
  - [[Exercises - 74][Exercises - 74]]
- [[6 File system - 77][6 File system - 77]]
  - [[Overview - 77][Overview - 77]]
  - [[Buffer cache layer - 78][Buffer cache layer - 78]]
  - [[Code: Buffer cache - 79][Code: Buffer cache - 79]]
  - [[Logging layer - 80][Logging layer - 80]]
  - [[Log design - 81][Log design - 81]]
  - [[Code: logging - 82][Code: logging - 82]]
  - [[Code: Block allocator - 83][Code: Block allocator - 83]]
  - [[Inode layer - 83][Inode layer - 83]]
  - [[Code: Inodes - 84][Code: Inodes - 84]]
  - [[Code: Inode content - 86][Code: Inode content - 86]]
  - [[Code: directory layer - 87][Code: directory layer - 87]]
  - [[Code: Path names - 88][Code: Path names - 88]]
  - [[File descriptor layer - 89][File descriptor layer - 89]]
  - [[Code: System calls - 90][Code: System calls - 90]]
  - [[Real world - 91][Real world - 91]]
  - [[Exercises - 92][Exercises - 92]]
- [[7 Summary - 93][7 Summary - 93]]
- [[A PC hardware - 95][A PC hardware - 95]]
  - [[Processor and memory - 95][Processor and memory - 95]]
  - [[I/O - 96][I/O - 96]]
- [[B The boot loader 99][B The boot loader 99]]
  - [[Code: Assembly bootstrap - 99][Code: Assembly bootstrap - 99]]
  - [[Code: C bootstrap - 102][Code: C bootstrap - 102]]
  - [[Real world - 102][Real world - 102]]
  - [[Exercises - 103][Exercises - 103]]
- [[Index 105][Index 105]]

* TODO 0 Operating system interfaces - 7
** TODO Processes and memory - 8
** TODO I/O and File descriptors - 10
** TODO Pipes - 13
** TODO File system - 14
** TODO Real world - 16

* TODO 1 Operating system organization - 17
** TODO Abstracting physical resources - 17
** TODO User mode, kernel mode, and system calls - 18
** TODO Kernel organization - 19
** TODO Process overview - 20
** TODO Code: the first address space - 22
** TODO Code: creating the first process - 23
** TODO Code: Running the first process - 25
** TODO The first system call: exec - 26
** TODO Real world - 27
** TODO Exercises - 27
   1. 
   2. 

* TODO 2 Page tables - 29
** TODO Paging hardware - 29
** TODO Process address space - 30
** TODO Code: creating an address space - 32
** TODO Physical memory allocation - 32
** TODO Code: Physical memory allocator - 33
** TODO User part of an address space - 34
** TODO Code: sbrk - 34
** TODO Code: exec - 35
** TODO Real world - 36
** TODO Exercises - 37
   1. 
   2. 
   3. 
   4. 
   5. 
   6. 
   7. 

* TODO 3 Traps, interrupts, and drivers - 39
** TODO Systems calls, exceptions, and interrupts - 39
** TODO X86 protection - 40
** TODO Code: The first system call - 41
** TODO Code: Assembly trap handlers - 42
** TODO Code: C trap handler - 44
** TODO Code: System calls - 44
** TODO Code: Interrupts - 45
** TODO Drivers - 46
** TODO Code: Disk driver - 47
** TODO Real world - 48
** TODO Exercises - 49
   1. 
   2. 
   3. 
   4. 

* TODO 4 Locking - 51
** TODO Race conditions - 51
** TODO Code: Locks - 53
** TODO Code: Using locks - 54
** TODO Deadlock and lock ordering - 55
** TODO Interrupt handlers - 56
** TODO Instruction and memory ordering - 57
** TODO Sellp locks - 57
** TODO Limitations of locks - 58
** TODO Real world - 59
** TODO Exercises - 59
   1. 
   2. 
   3. 
   4. 

* TODO 5 Scheduling - 61
** Multiplexing - 61
** Code: Context switch - 62
** Code: Scheduling - 63
** Code: mycpu and myproc - 65
** Sleep and wakeup - 65
** Code: Sleep and wakeup - 69
** Code: Pipe - 70
** Code: Wait, exit, and kill - 71
** Real words - 72
** Exercises - 74
   1. 
   2. 
   3. 
   4. 
   5. 
   6. 
   7. 

* TODO 6 File system - 77
** Overview - 77
** Buffer cache layer - 78
** Code: Buffer cache - 79
** Logging layer - 80
** Log design - 81
** Code: logging - 82
** Code: Block allocator - 83
** Inode layer - 83
** Code: Inodes - 84
** Code: Inode content - 86
** Code: directory layer - 87
** Code: Path names - 88
** File descriptor layer - 89
** Code: System calls - 90
** Real world - 91
** Exercises - 92
   1. 
   2. 
   3. 
   4. 
   5. 
   6. 
   7. 
   8. 
   9. 

* TODO 7 Summary - 93
* TODO A PC hardware - 95
** TODO Processor and memory - 95
** TODO I/O - 96

* TODO B The boot loader 99
** Code: Assembly bootstrap - 99
** Code: C bootstrap - 102
** Real world - 102
** Exercises - 103
   1. 
   2. 
   3. 

* Index 105
