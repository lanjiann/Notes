#+TITLE: Cats Effect
#+SUBTITLE: The IO Monad for Scala
#+VERSION: 2.0.0 - available for Scala 2.11.x, 2.12.x, 2.13.0, as well as Scala.js 0.6.x
#+STARTUP: entitiespretty

* Data Types
** IO
** SyncIO
** Fiber
** Resource
** Clock
** ContextShift
** Timer
** IOApp

* Concurrency
** Concurrency Basicsi
** Deferred
** MVar
** Ref
** Semaphore

* Type Classes
** Bracket
** Sync
** LiftIO
** Async
** Concurrent
** Effect
** ConcurrentEffect

* Tutorial
** Introduction
** Setting things up
** Copying contents of a file - safely handling resources
*** Acquiring and releasing ~Resource~'s
*** What about ~bracket~?
*** Copying data
*** Dealing with cancellation
*** ~IOApp~ for our final program
**** Copy program code

*** Polymorphic cats-effect code
**** Copy program code, polymorphic version

*** Exercises: improving our small ~IO~ program

** TCP echo server - concurrent system with ~Fiber~'s
*** ~IOApp~ for our server
**** Echo server code, simple version

*** Graceful server stop (handling exit events)
**** Echo server code, graceful stop version
**** Exercise: closing client connections to echo server on shutdown
**** Solution
**** Echo server code, closing client connections version

*** ~Fiber~'s are not threads!
*** The ~ContextShift~ type class
**** Exercise: using a custom thread pool in echo server
**** Solution
**** Echo server code, thread pool for clients version

*** Let's not forget about ~async~
**** Using ~async~ in our echo server
***** Echo server code, async version

**** When is ~async~ useful then?

*** Conclusion
