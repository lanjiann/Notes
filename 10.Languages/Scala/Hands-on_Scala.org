#+TITLE: Hands-on Scala
#+AUTHOR: Haoyi Li
#+STARTUP: entitiespretty

* Part I: Introduction to Scala
** Chapter 1: Hands-on Scala
*** 1.1 Why Scala? - 17
*** 1.2 Why This Book? - 18
*** 1.3 How This Book Is Organized - 19
*** 1.4 Code Snippet and Examples - 21
*** 1.5 Online Materials - 23
*** 1.6 Conclusion - ???

** Chapter 2: Setting Up
*** 2.1 Windows Setup (Optional) - 27
*** 2.2 Installing Java - 27
*** 2.3 Installing Ammonite - 28
*** 2.4 Installing Mill - 32
*** 2.5 IDE Support - 35
*** 2.6 Conclusion - ???

** Chapter 3: Basic Scala
*** 3.1 Values - 41
*** 3.2 Loops, Conditionals, Comprehensions - 48
*** 3.3 Methods and Functions - 52
*** 3.4 Classes and Traits - 55
*** 3.5 Conclusion - ???

** Chapter 4: Scala Collections
*** 4.1 Operations - 59
*** 4.2 Immutable Collections - 65
*** 4.3 Mutable Collections - 70
*** 4.4 Common Interfaces - 75
*** 4.5 Conclusion - ???

** Chapter 5: Notable Scala Features
*** 5.1 Case Classes and Sealed Traits - 79
*** 5.2 Pattern Matching - 81
*** 5.3 By-Name Parameters - 87
*** 5.4 Implicit Parameters - 89
*** 5.5 Typeclass Inference - 92
*** 5.6 Conclusion - ???

* Part II: Local Development (Preview)
** Chapter 6: Implementing Algorithms in Scala
*** 6.1 Merge Sort - 103
*** 6.2 Prefix Tries- 107
*** 6.3 Breadth First Search - 114
*** 6.4 Shortest Paths - 117

** Chapter 7: Files and Subprocesses
*** 7.1 Paths - 123
*** 7.2 Filesystem Operations - 125
*** 7.3 Folder Syncing - 129
*** 7.4 Simple Subprocess Invocations - 133
*** 7.5 Interactive and Streaming Subprocesses - 137

** Chapter 8: JSON and Binary Data Serialization
*** 8.1 Manipulating JSON - 143
*** 8.2 JSON Serialization of Scala Data Types - 146
*** 8.3 Writing your own Generic Serialization Methods - 150
*** 8.4 Binary Serialization - 153

** Chapter 9: Self-Contained Scala Scripts
*** 9.1 Reading Files Off Disk - 159
*** 9.2 Using a Scala HTML Library - 160
*** 9.3 Using a Java Markdown Library - 162
*** 9.4 Links and Bootstrap - 167
*** 9.5 Optionally Deploying the Static Site - 170

** Chapter 10: Static Build Pipelines
*** 10.1 Mill Build Pipelines - 175
*** 10.2 Mill Modules - 180
*** 10.3 Revisiting our Static Site Script - 184
*** 10.4 Conversion to a Mill Build Pipeline - 184
*** 10.5 Extending our Static Site Pipeline - 188

* Part III: Web Services (Preview)
** Chapter 11: Scraping Websites
*** 11.1 Scraping Wikipedia - 199
*** 11.2 MDN Web Documentation - 203
*** 11.3 Scraping MDN - 205
*** 11.4 Putting it Together - 209

** Chapter 12: Working with HTTP APIs
*** 12.1 The Task: Github Issue Migrator - 215
*** 12.2 Creating Issues and Comments - 217
*** 12.3 Fetching Issues and Comments - 219
*** 12.4 Migrating Issues and Comments - 224

** Chapter 13: Fork-Join Parallelism with Futures
*** 13.1 Parallel Computation using Futures - 233
*** 13.2 N-Ways Parallelism - 236
*** 13.3 Parallel Web Crawling - 239
*** 13.4 Asynchronous Futures - 244
*** 13.5 Asynchronous Web Crawling - 248

** Chapter 14: Simple Web and API Servers
*** 14.1 A Minimal Webserver - 255
*** 14.2 Serving HTML - 258
*** 14.3 Forms and Dynamic Data - 261
*** 14.4 Dynamic Page Updates via API Requests - 268
*** 14.5 Real-time Updates with Websockets - 272

** Chapter 15: Querying SQL Databases
*** 15.1 Setting up Quill and PostgreSQL - 279
*** 15.2 Mapping Tables to Case Classes - 281
*** 15.3 Querying and Updating Data - 284
*** 15.4 Transactions - 289
*** 15.5 A Database-Backed Chat Website - 291

* Part IV: Program Design (Preview)
** Chapter 16: Message-based Parallelism with Actors
*** 16.1 Castor Actors - 301
*** 16.2 Actor-based Background Uploads - 302
*** 16.3 Concurrent Logging Pipelines - 308
*** 16.4 Debugging Actors - 315

** Chapter 17: Multi-Process Applications
*** 17.1 Two-Process Build Setup - 321
*** 17.2 Remote Procedure Calls - 324
*** 17.3 The Agent Process - 326
*** 17.4 The Sync Process - 328
*** 17.5 Pipelined Syncing - 331

** Chapter 18: Building a Real-time File Synchronizer
*** 18.1 Watching for Changes - 337
*** 18.2 Real-time Syncing with Actors - 338
*** 18.3 Testing the Syncer - 345
*** 18.4 Pipelined Real-time Syncing - 347
*** 18.5 Testing the Pipelined Syncer - 350

** Chapter 19: Parsing Structured Text
*** 19.1 Simple Parsers - 355
*** 19.2 Parsing Structured Values - 360
*** 19.3 Implementing a Calculator - 364
*** 19.4 Parser Debugging and Error Reporting - 370

** Chapter 20: Implementing a Programming Language
*** 20.1 Interpreting Jsonnet - 377
*** 20.2 Jsonnet Language Features - 378
*** 20.3 Parsing Jsonnet - 379
*** 20.4 Evaluating the Syntax Tree - 388
*** 20.5 Serializing to JSON - 394
