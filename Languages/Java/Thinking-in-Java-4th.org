#+TITLE: Thinking in Java
#+VERSION: 206, 4th Edition
#+AUTHOR: Bruce Eckel
#+STARTUP: entitiespretty

* Table of Contents                                      :TOC_4_org:noexport:
 - [[Preface][Preface]]
   - [[Java SE5 and SE6][Java SE5 and SE6]]
     - [[Java SE6][Java SE6]]
   - [[The 4th edition][The 4th edition]]
   - [[Note on the cover design][Note on the cover design]]
   - [[Acknowledgments][Acknowledgments]]
 - [[1 Introduction][1 Introduction]]
   - [[1.1 Prerequisites][1.1 Prerequisites]]
   - [[1.2 Learning Java][1.2 Learning Java]]
   - [[1.3 Goals][1.3 Goals]]
   - [[1.4 Teaching from this book][1.4 Teaching from this book]]
   - [[1.5 JDK HTML Documentation][1.5 JDK HTML Documentation]]
   - [[1.6 Exercises][1.6 Exercises]]
   - [[1.7 Foundations for Java][1.7 Foundations for Java]]
   - [[1.8 Source code][1.8 Source code]]
     - [[Coding standards][Coding standards]]
   - [[1.9 Errors][1.9 Errors]]
 - [[2 Introduction to Objects][2 Introduction to Objects]]
   - [[The progress of abstraction][The progress of abstraction]]
   - [[An object has an interface][An object has an interface]]
   - [[An object provides services][An object provides services]]
   - [[The hidden implementation][The hidden implementation]]
   - [[Reusing the implementation][Reusing the implementation]]
   - [[Inheritance][Inheritance]]
     - [[Is-a vs. is-like-a replationships][Is-a vs. is-like-a replationships]]
   - [[Interchangeable objects with polymorphism][Interchangeable objects with polymorphism]]
   - [[The singly rooted hierarchy][The singly rooted hierarchy]]
   - [[Containers][Containers]]
     - [[Parameterized types (Generics)][Parameterized types (Generics)]]
   - [[Object creation & lifetime][Object creation & lifetime]]
   - [[Exception handling: dealing with errors][Exception handling: dealing with errors]]
   - [[Concurrent programming][Concurrent programming]]
   - [[Java adn the Internet][Java adn the Internet]]
     - [[What is the Web?][What is the Web?]]
     - [[Client-side programming][Client-side programming]]
     - [[Server-side programming][Server-side programming]]
   - [[Summary][Summary]]
 - [[3 Everything Is an Object][3 Everything Is an Object]]
   - [[3.1  You manipulate objects with references][3.1  You manipulate objects with references]]
   - [[3.2  You must create all the objects][3.2  You must create all the objects]]
   - [[3.3  You never need to destroy an object][3.3  You never need to destroy an object]]
   - [[3.4  Creating new data types: ~class~][3.4  Creating new data types: ~class~]]
   - [[3.5  Methods, arguments, and return values][3.5  Methods, arguments, and return values]]
   - [[3.6  Building a Java program][3.6  Building a Java program]]
   - [[3.7  Your first Java program][3.7  Your first Java program]]
   - [[3.8  Comments and embedded document][3.8  Comments and embedded document]]
   - [[3.9  Coding style][3.9  Coding style]]
   - [[3.10 Summary][3.10 Summary]]
   - [[3.11 Exercises][3.11 Exercises]]
 - [[4 Operators][4 Operators]]
   - [[Simpler print statements][Simpler print statements]]
   - [[Using Java operators][Using Java operators]]
   - [[Precedence][Precedence]]
   - [[Assignment][Assignment]]
     - [[Aliasing during method calls][Aliasing during method calls]]
   - [[Mathematical operators][Mathematical operators]]
     - [[Unary minus and plus operators][Unary minus and plus operators]]
   - [[Auto increment and decrement][Auto increment and decrement]]
   - [[Relational operators][Relational operators]]
     - [[Testing object equivalence][Testing object equivalence]]
   - [[Logical operators][Logical operators]]
     - [[Short-circuiting][Short-circuiting]]
   - [[Literals][Literals]]
     - [[Exponential notation][Exponential notation]]
   - [[Bitwise operators][Bitwise operators]]
   - [[Shift operators][Shift operators]]
   - [[Ternary ~if-else~ operator][Ternary ~if-else~ operator]]
   - [[~String~ operator ~+~ and ~+=~][~String~ operator ~+~ and ~+=~]]
   - [[Common pitfalls when using operators][Common pitfalls when using operators]]
   - [[Casting operators][Casting operators]]
     - [[Truncation and rounding][Truncation and rounding]]
     - [[Promotion][Promotion]]
   - [[Java has no "sizeof"][Java has no "sizeof"]]
   - [[A compendium of operators][A compendium of operators]]
   - [[Summary][Summary]]
 - [[5 Controlling Execution][5 Controlling Execution]]
   - [[~true~ and ~false~][~true~ and ~false~]]
   - [[~if-else~][~if-else~]]
   - [[Iteration][Iteration]]
     - [[~do-while~][~do-while~]]
     - [[~for~][~for~]]
     - [[The comma operator][The comma operator]]
   - [[Foreach syntax][Foreach syntax]]
   - [[~return~][~return~]]
   - [[~break~ and ~continue~][~break~ and ~continue~]]
   - [[The infamous "goto"][The infamous "goto"]]
   - [[~switch~][~switch~]]
   - [[Summary][Summary]]
 - [[6 Initialization & Cleanup][6 Initialization & Cleanup]]
   - [[Guaranteed initialization with constructor][Guaranteed initialization with constructor]]
   - [[Method overloading][Method overloading]]
     - [[Disginguishing overloaded methods][Disginguishing overloaded methods]]
     - [[Overloading with primitives][Overloading with primitives]]
     - [[Overloading on return values][Overloading on return values]]
   - [[Default constructors][Default constructors]]
   - [[The ~this~ keyword][The ~this~ keyword]]
     - [[Calling constructors from constructors][Calling constructors from constructors]]
     - [[The meaning of ~static~][The meaning of ~static~]]
   - [[Cleanup: finalization and garbage collection][Cleanup: finalization and garbage collection]]
     - [[What is ~finalize()~ for?][What is ~finalize()~ for?]]
     - [[You must perform cleanup][You must perform cleanup]]
     - [[The termination condition][The termination condition]]
     - [[How a garbage collector works][How a garbage collector works]]
   - [[Member initialization][Member initialization]]
     - [[Specifying initialization][Specifying initialization]]
   - [[Constructor initialization][Constructor initialization]]
     - [[Order of initialization][Order of initialization]]
     - [[~static~ data initialization][~static~ data initialization]]
     - [[Explicit ~static~ initialization][Explicit ~static~ initialization]]
     - [[Non-static instance initialization][Non-static instance initialization]]
   - [[Array initialization][Array initialization]]
     - [[Variable argument lists][Variable argument lists]]
   - [[Enumerated types][Enumerated types]]
   - [[Summary][Summary]]
 - [[7 Access Control][7 Access Control]]
   - [[7.1 An Overview of the Collections Framework][7.1 An Overview of the Collections Framework]]
   - [[7.2 Iterators][7.2 Iterators]]
   - [[7.3 Sets][7.3 Sets]]
   - [[7.4 Maps][7.4 Maps]]
   - [[7.5 Other Collections][7.5 Other Collections]]
     - [[7.5.1 Properties][7.5.1 Properties]]
     - [[7.5.2 Bit Sets][7.5.2 Bit Sets]]
     - [[7.5.3 Enumeration Sets and Maps][7.5.3 Enumeration Sets and Maps]]
     - [[7.5.4 Stacks, Queues, Deques, and Priority Queues][7.5.4 Stacks, Queues, Deques, and Priority Queues]]
     - [[7.5.5 Weak Hash Maps][7.5.5 Weak Hash Maps]]
   - [[7.6 Views][7.6 Views]]
     - [[7.6.1 Ranges][7.6.1 Ranges]]
     - [[7.6.2 Empty and Singleton Views][7.6.2 Empty and Singleton Views]]
     - [[7.6.3 Unmodifiable Views][7.6.3 Unmodifiable Views]]
   - [[Exercises][Exercises]]
 - [[8 Reusing Classes][8 Reusing Classes]]
   - [[8.1 From Iterating to Stream Operations][8.1 From Iterating to Stream Operations]]
   - [[8.2 Stream Creation][8.2 Stream Creation]]
   - [[8.3 The filter, map, and flatMap Methods][8.3 The filter, map, and flatMap Methods]]
   - [[8.4 Extracting Substreams and Combining Streams][8.4 Extracting Substreams and Combining Streams]]
   - [[8.5 Other Stream Transformations][8.5 Other Stream Transformations]]
   - [[8.6 Simple Reductions][8.6 Simple Reductions]]
   - [[8.7 The Optional Type][8.7 The Optional Type]]
     - [[8.7.1 How to Work with Optional Values][8.7.1 How to Work with Optional Values]]
     - [[8.7.2 How Not to Work with Optional Values][8.7.2 How Not to Work with Optional Values]]
     - [[8.7.3 Creating Optional Values][8.7.3 Creating Optional Values]]
     - [[8.7.4 Composing Optional Value Functions with flatMap][8.7.4 Composing Optional Value Functions with flatMap]]
   - [[8.8 Collecting Results][8.8 Collecting Results]]
   - [[8.9 Collecting into Maps][8.9 Collecting into Maps]]
   - [[8.10 Grouping and Partitioning][8.10 Grouping and Partitioning]]
   - [[8.11 Downstream Collectors][8.11 Downstream Collectors]]
   - [[8.12 Reduction Operations][8.12 Reduction Operations]]
   - [[8.13 Primitive Type Streams][8.13 Primitive Type Streams]]
   - [[8.14 Parallel Streams][8.14 Parallel Streams]]
   - [[Exercises][Exercises]]
 - [[9 Polymorphism][9 Polymorphism]]
   - [[9.1 Input/Output Streams, Readers, and Writers][9.1 Input/Output Streams, Readers, and Writers]]
     - [[9.1.1 Obtaining Streams][9.1.1 Obtaining Streams]]
     - [[9.1.2 Reading Bytes][9.1.2 Reading Bytes]]
     - [[9.1.3 Writing Bytes][9.1.3 Writing Bytes]]
     - [[9.1.4 Character Encodings][9.1.4 Character Encodings]]
     - [[9.1.5 Text Input][9.1.5 Text Input]]
     - [[9.1.6 Text Output][9.1.6 Text Output]]
     - [[9.1.7 Reading and Writing Binary Data][9.1.7 Reading and Writing Binary Data]]
     - [[9.1.8 Random-Access Files][9.1.8 Random-Access Files]]
     - [[9.1.9 Memory-Mapped Files][9.1.9 Memory-Mapped Files]]
     - [[9.1.10 File Locking][9.1.10 File Locking]]
   - [[9.2 Paths, Files, and Directories][9.2 Paths, Files, and Directories]]
     - [[9.2.1 Paths][9.2.1 Paths]]
     - [[9.2.2 Creating Files and Directories][9.2.2 Creating Files and Directories]]
     - [[9.2.3 Copying, Moving, and Deleting Files][9.2.3 Copying, Moving, and Deleting Files]]
     - [[9.2.4 Visiting Directory Entries][9.2.4 Visiting Directory Entries]]
     - [[9.2.5 ZIP File Systems][9.2.5 ZIP File Systems]]
   - [[9.3 URL Connections][9.3 URL Connections]]
   - [[9.4 Regular Expressions][9.4 Regular Expressions]]
     - [[9.4.1 The Regular Expression Syntax][9.4.1 The Regular Expression Syntax]]
     - [[9.4.2 Finding One or All Matches][9.4.2 Finding One or All Matches]]
     - [[9.4.3 Groups][9.4.3 Groups]]
     - [[9.4.4 Removing or Replacing Matches][9.4.4 Removing or Replacing Matches]]
     - [[9.4.5 Flags][9.4.5 Flags]]
   - [[9.5 Serialization][9.5 Serialization]]
     - [[9.5.1 The Serializable Interface][9.5.1 The Serializable Interface]]
     - [[9.5.2 Transient Instance Variables][9.5.2 Transient Instance Variables]]
     - [[9.5.3 The readObject and writeObject Methods][9.5.3 The readObject and writeObject Methods]]
     - [[9.5.4 The readResolve and writeReplace Methods][9.5.4 The readResolve and writeReplace Methods]]
     - [[9.5.5 Versioning][9.5.5 Versioning]]
   - [[Exercises][Exercises]]
 - [[10 Interfaces][10 Interfaces]]
   - [[10.1 Concurrent Tasks][10.1 Concurrent Tasks]]
     - [[10.1.1 Running Tasks][10.1.1 Running Tasks]]
     - [[10.1.2 Futures and Executor Services][10.1.2 Futures and Executor Services]]
   - [[10.2 Thread Safety][10.2 Thread Safety]]
     - [[10.2.1 Visibility][10.2.1 Visibility]]
     - [[10.2.2 Race Conditions][10.2.2 Race Conditions]]
     - [[10.2.3 Strategies for Safe Concurrency][10.2.3 Strategies for Safe Concurrency]]
     - [[10.2.4 Immutable Classes][10.2.4 Immutable Classes]]
   - [[10.3 Parallel Algorithms][10.3 Parallel Algorithms]]
     - [[10.3.1 Parallel Streams][10.3.1 Parallel Streams]]
     - [[10.3.2 Parallel Array Operations][10.3.2 Parallel Array Operations]]
   - [[10.4 Threadsafe Data Structures][10.4 Threadsafe Data Structures]]
     - [[10.4.1 Concurrent Hash Maps][10.4.1 Concurrent Hash Maps]]
     - [[10.4.2 Blocking Queues][10.4.2 Blocking Queues]]
     - [[10.4.3 Other Threadsafe Data Structures][10.4.3 Other Threadsafe Data Structures]]
   - [[10.5 Atomic Values][10.5 Atomic Values]]
   - [[10.6 Locks][10.6 Locks]]
     - [[10.6.1 Reentrant Locks][10.6.1 Reentrant Locks]]
     - [[10.6.2 The synchronized Keyword][10.6.2 The synchronized Keyword]]
     - [[10.6.3 Waiting on Conditions][10.6.3 Waiting on Conditions]]
   - [[10.7 Threads][10.7 Threads]]
     - [[10.7.1 Starting a Thread][10.7.1 Starting a Thread]]
     - [[10.7.2 Thread Interruption][10.7.2 Thread Interruption]]
     - [[10.7.3 Thread-Local Variables][10.7.3 Thread-Local Variables]]
     - [[10.7.4 Miscellaneous Thread Properties][10.7.4 Miscellaneous Thread Properties]]
   - [[10.8 Asynchronous Computations][10.8 Asynchronous Computations]]
     - [[10.8.1 Long-Running Tasks in User Interface Callbacks][10.8.1 Long-Running Tasks in User Interface Callbacks]]
     - [[10.8.2 Completable Futures][10.8.2 Completable Futures]]
   - [[10.9 Processes][10.9 Processes]]
     - [[10.9.1 Building a Process][10.9.1 Building a Process]]
     - [[10.9.2 Running a Process][10.9.2 Running a Process]]
   - [[Exercises][Exercises]]
 - [[11 Inner Classes][11 Inner Classes]]
   - [[11.1 Using Annotations][11.1 Using Annotations]]
     - [[11.1.1 Annotation Elements][11.1.1 Annotation Elements]]
     - [[11.1.2 Multiple and Repeated Annotations][11.1.2 Multiple and Repeated Annotations]]
     - [[11.1.3 Annotating Declarations][11.1.3 Annotating Declarations]]
     - [[11.1.4 Annotating Type Uses][11.1.4 Annotating Type Uses]]
     - [[11.1.5 Making Receivers Explicit][11.1.5 Making Receivers Explicit]]
   - [[11.2 Defining Annotations][11.2 Defining Annotations]]
   - [[11.3 Standard Annotations][11.3 Standard Annotations]]
     - [[11.3.1 Annotations for Compilation][11.3.1 Annotations for Compilation]]
     - [[11.3.2 Annotations for Managing Resources][11.3.2 Annotations for Managing Resources]]
     - [[11.3.3 Meta-Annotations][11.3.3 Meta-Annotations]]
   - [[11.4 Processing Annotations at Runtime][11.4 Processing Annotations at Runtime]]
   - [[11.5 Source-Level Annotation Processing][11.5 Source-Level Annotation Processing]]
     - [[11.5.1 Annotation Processors][11.5.1 Annotation Processors]]
     - [[11.5.2 The Language Model API][11.5.2 The Language Model API]]
     - [[11.5.3 Using Annotations to Generate Source Code][11.5.3 Using Annotations to Generate Source Code]]
   - [[Exercises][Exercises]]
 - [[12 Holding Your Objects][12 Holding Your Objects]]
   - [[12.1 The Time Line][12.1 The Time Line]]
   - [[12.2 Local Dates][12.2 Local Dates]]
   - [[12.3 Date Adjusters][12.3 Date Adjusters]]
   - [[12.4 Local Time][12.4 Local Time]]
   - [[12.5 Zoned Time][12.5 Zoned Time]]
   - [[12.6 Formatting and Parsing][12.6 Formatting and Parsing]]
   - [[12.7 Interoperating with Legacy Code][12.7 Interoperating with Legacy Code]]
   - [[Exercises][Exercises]]
 - [[13 Error Handling with Exceptions][13 Error Handling with Exceptions]]
   - [[13.1 Locales][13.1 Locales]]
     - [[13.1.1 Specifying a Locale][13.1.1 Specifying a Locale]]
     - [[13.1.2 The Default Locale][13.1.2 The Default Locale]]
     - [[13.1.3 Display Names][13.1.3 Display Names]]
   - [[13.2 Number Formats][13.2 Number Formats]]
   - [[13.3 Currencies][13.3 Currencies]]
   - [[13.4 Date and Time Formatting][13.4 Date and Time Formatting]]
   - [[13.5 Collation and Normalization][13.5 Collation and Normalization]]
   - [[13.6 Message Formatting][13.6 Message Formatting]]
   - [[13.7 Resource Bundles][13.7 Resource Bundles]]
     - [[13.7.1 Organizing Resource Bundles][13.7.1 Organizing Resource Bundles]]
     - [[13.7.2 Bundle Classes][13.7.2 Bundle Classes]]
   - [[13.8 Character Encodings][13.8 Character Encodings]]
   - [[13.9 Preferences][13.9 Preferences]]
   - [[Exercises][Exercises]]
 - [[14 Strings][14 Strings]]
   - [[14.1 Immutable ~Strings~][14.1 Immutable ~Strings~]]
   - [[14.2 Overloading '\plus' vs. ~StringBuilder~][14.2 Overloading '\plus' vs. ~StringBuilder~]]
   - [[14.3 Unintended recursion][14.3 Unintended recursion]]
   - [[14.4 Operations on Strings][14.4 Operations on Strings]]
   - [[14.5 Formatting output][14.5 Formatting output]]
     - [[~printf()~][~printf()~]]
     - [[~System.out.format()~][~System.out.format()~]]
     - [[The ~Formatter~ class][The ~Formatter~ class]]
     - [[Format specifiers][Format specifiers]]
     - [[~Formatter~ conversions][~Formatter~ conversions]]
     - [[~String.format()~][~String.format()~]]
   - [[14.6 Regular expressions][14.6 Regular expressions]]
     - [[Basics][Basics]]
     - [[Creating regular expressions][Creating regular expressions]]
     - [[Quantifiers][Quantifiers]]
     - [[~Pattern~ and ~Matcher~][~Pattern~ and ~Matcher~]]
     - [[~split()~][~split()~]]
     - [[Replace operations][Replace operations]]
     - [[~reset()~][~reset()~]]
     - [[Regular expressions and Java I/O][Regular expressions and Java I/O]]
   - [[14.7 Scanning input][14.7 Scanning input]]
     - [[~Scanner~ delimiters][~Scanner~ delimiters]]
     - [[Scanning with regular expressions][Scanning with regular expressions]]
   - [[14.8 ~StringTokenizer~][14.8 ~StringTokenizer~]]
   - [[Summary][Summary]]
 - [[15 Type Information][15 Type Information]]
 - [[16 Generics][16 Generics]]
 - [[17 Arrays][17 Arrays]]
   - [[Why arrays are special][Why arrays are special]]
   - [[Arrays are first-class objects][Arrays are first-class objects]]
   - [[Returning an array Multidimensional arrays][Returning an array Multidimensional arrays]]
   - [[Arrays and generics][Arrays and generics]]
   - [[Creating test data][Creating test data]]
     - [[~Arrays.fill()~][~Arrays.fill()~]]
     - [[Data ~Generators~][Data ~Generators~]]
     - [[Creating arrays from ~Generators~][Creating arrays from ~Generators~]]
   - [[~Arrays~ utilities][~Arrays~ utilities]]
     - [[Copying an array][Copying an array]]
     - [[Comparing arrays][Comparing arrays]]
     - [[Array element comparisons][Array element comparisons]]
     - [[Sorting an array][Sorting an array]]
     - [[Searching a sorted array][Searching a sorted array]]
   - [[Summary][Summary]]
 - [[18 Containers in Depth][18 Containers in Depth]]
   - [[Full container taxonomy][Full container taxonomy]]
   - [[Filling containers][Filling containers]]
     - [[A ~Generator~ solution][A ~Generator~ solution]]
     - [[~Map~ generators][~Map~ generators]]
     - [[Using ~Abstract~ classes][Using ~Abstract~ classes]]
   - [[~Collection~ functionality][~Collection~ functionality]]
   - [[Optional operations][Optional operations]]
     - [[Unsupported operations][Unsupported operations]]
   - [[~List~ functionality][~List~ functionality]]
   - [[~Set~s and storage order][~Set~s and storage order]]
     - [[~SortedSet~][~SortedSet~]]
   - [[Queues][Queues]]
     - [[Priority queues][Priority queues]]
     - [[Deques][Deques]]
   - [[Understanding ~Map~s][Understanding ~Map~s]]
     - [[Performance][Performance]]
     - [[~SortedMap~][~SortedMap~]]
     - [[~LinkedHashMap~][~LinkedHashMap~]]
   - [[Hashing and hash codes][Hashing and hash codes]]
     - [[Understanding ~hashCode()~][Understanding ~hashCode()~]]
     - [[Hashing for speed][Hashing for speed]]
     - [[Overriding ~hashCode()~][Overriding ~hashCode()~]]
   - [[Choosing an implementation][Choosing an implementation]]
     - [[A performance test framework][A performance test framework]]
     - [[Choosing between ~List~s][Choosing between ~List~s]]
     - [[Microbenchmarking dangers][Microbenchmarking dangers]]
     - [[Choosing between ~Set~s][Choosing between ~Set~s]]
     - [[Choosing between ~Map~s][Choosing between ~Map~s]]
   - [[Utilities][Utilities]]
     - [[Sorting and searching ~List~s][Sorting and searching ~List~s]]
     - [[Making a ~Collection~ or ~Map~ unmodifiable][Making a ~Collection~ or ~Map~ unmodifiable]]
     - [[Synchronizing a ~Collection~ or ~Map~][Synchronizing a ~Collection~ or ~Map~]]
   - [[Holding references][Holding references]]
     - [[The ~WeakHashMap~][The ~WeakHashMap~]]
   - [[Java 1.0/1.1 containers][Java 1.0/1.1 containers]]
     - [[~Vector~ & ~Enumeration~][~Vector~ & ~Enumeration~]]
     - [[~Hashtable~][~Hashtable~]]
     - [[~Stack~][~Stack~]]
     - [[~BitSet~][~BitSet~]]
   - [[Summary][Summary]]
 - [[19 I/O][19 I/O]]
 - [[20 Enumerated Types][20 Enumerated Types]]
 - [[21 Annotations][21 Annotations]]
   - [[Basic syntax][Basic syntax]]
     - [[Defining annotations][Defining annotations]]
     - [[Meta-annotations][Meta-annotations]]
   - [[Writing annotation processors][Writing annotation processors]]
     - [[Annotation elements][Annotation elements]]
     - [[Default value constraints][Default value constraints]]
     - [[Generating external files][Generating external files]]
     - [[Annotation don't support inheritance][Annotation don't support inheritance]]
     - [[Implementing the processor][Implementing the processor]]
   - [[Using ~apt~ to process annotations][Using ~apt~ to process annotations]]
   - [[Using the /Visitor/ pattern with ~apt~][Using the /Visitor/ pattern with ~apt~]]
   - [[Annotation-based unit testing][Annotation-based unit testing]]
     - [[Using ~@Unit~ with generics][Using ~@Unit~ with generics]]
     - [[No "suites" necessary][No "suites" necessary]]
     - [[Implementing ~@Unit~][Implementing ~@Unit~]]
     - [[Removing test code][Removing test code]]
   - [[Summary][Summary]]
 - [[22 Concurrency][22 Concurrency]]
   - [[22.1  The many faces of concurrency][22.1  The many faces of concurrency]]
   - [[22.2  Basic threading][22.2  Basic threading]]
   - [[22.3  Sharing resources][22.3  Sharing resources]]
   - [[22.4  Terminating tasks][22.4  Terminating tasks]]
   - [[22.5  Cooperation between tasks][22.5  Cooperation between tasks]]
   - [[22.6  Deadlock][22.6  Deadlock]]
   - [[22.7  New library components][22.7  New library components]]
   - [[22.8  Simulation][22.8  Simulation]]
   - [[22.9  Performance tuning][22.9  Performance tuning]]
   - [[22.10 Active objects][22.10 Active objects]]
   - [[22.11 Summary][22.11 Summary]]
 - [[23 Graphical User Interfaces][23 Graphical User Interfaces]]
 - [[A: Supplements][A: Supplements]]
   - [[Downloadable supplements][Downloadable supplements]]
   - [[Thinking in C: Foundations for Java][Thinking in C: Foundations for Java]]
   - [[Thinking in Java seminar][Thinking in Java seminar]]
   - [[Hands-On Java seminar-on-CD][Hands-On Java seminar-on-CD]]
   - [[Thinking in Objects seminar][Thinking in Objects seminar]]
   - [[Thinking in Enterprise Java][Thinking in Enterprise Java]]
   - [[Thinking in Patterns (with Java)][Thinking in Patterns (with Java)]]
   - [[Thinking in Patterns seminar][Thinking in Patterns seminar]]
   - [[Design consulting and reviews][Design consulting and reviews]]
 - [[B: Resources][B: Resources]]

* Preface
** Java SE5 and SE6
*** Java SE6
** The 4th edition
** Note on the cover design
** Acknowledgments

* DONE 1 Introduction
  CLOSED: [2017-04-17 Mon 22:05]
** 1.1 Prerequisites
** 1.2 Learning Java
** 1.3 Goals
** 1.4 Teaching from this book
** 1.5 JDK HTML Documentation
** 1.6 Exercises
** 1.7 Foundations for Java
** 1.8 Source code
*** Coding standards
** 1.9 Errors
    
* DONE 2 Introduction to Objects
  CLOSED: [2017-04-17 Mon 22:22]
** The progress of abstraction
** An object has an interface
** An object provides services
** The hidden implementation
** Reusing the implementation
** Inheritance
*** Is-a vs. is-like-a replationships
** Interchangeable objects with polymorphism
** The singly rooted hierarchy
** Containers
*** Parameterized types (Generics)
** Object creation & lifetime
** Exception handling: dealing with errors
** Concurrent programming
** Java adn the Internet
*** What is the Web?
*** Client-side programming
*** Server-side programming
** Summary

* DONE 3 Everything Is an Object
  CLOSED: [2017-04-17 Mon 22:42]
** 3.1  You manipulate objects with references
** 3.2  You must create all the objects
***3where storage lives
***3Special case: primitive types
***3Arrays in Java
** 3.3  You never need to destroy an object
***3Scoping
***3Scope of objects
** 3.4  Creating new data types: ~class~
***3Fields and methods
** 3.5  Methods, arguments, and return values
***3The argument list
** 3.6  Building a Java program
***32.6.1 Name visibility
***32.6.2 Using other components
***32.6.3 The ~static~ keyword
** 3.7  Your first Java program
***3Compiling and running
** 3.8  Comments and embedded document
***3Comment documentation
***3Syntax
***3Embedded HTML
***3Some example tags
***3Documentation example
** 3.9  Coding style
** 3.10 Summary
** 3.11 Exercises

* DONE 4 Operators
  CLOSED: [2017-04-23 Sun 00:05]
** Simpler print statements
** Using Java operators
** Precedence
** Assignment
*** Aliasing during method calls
** Mathematical operators
*** Unary minus and plus operators
** Auto increment and decrement
** Relational operators
*** Testing object equivalence
** Logical operators
*** Short-circuiting
** Literals
*** Exponential notation
** Bitwise operators
** Shift operators
** Ternary ~if-else~ operator
** ~String~ operator ~+~ and ~+=~
** Common pitfalls when using operators
** Casting operators
*** Truncation and rounding
*** Promotion
** Java has no "sizeof"
** A compendium of operators
** Summary
* DONE 5 Controlling Execution
  CLOSED: [2017-04-22 Sat 23:55]
** ~true~ and ~false~
** ~if-else~
** Iteration
*** ~do-while~
*** ~for~
*** The comma operator
** Foreach syntax
** ~return~
** ~break~ and ~continue~
** The infamous "goto"
** ~switch~
** Summary
* DONE 6 Initialization & Cleanup
  CLOSED: [2017-04-23 Sun 00:16]
** Guaranteed initialization with constructor
** Method overloading
*** Disginguishing overloaded methods
*** Overloading with primitives
*** Overloading on return values
** Default constructors
** The ~this~ keyword
*** Calling constructors from constructors
*** The meaning of ~static~
** Cleanup: finalization and garbage collection
*** What is ~finalize()~ for?
*** You must perform cleanup
*** The termination condition
*** How a garbage collector works
** Member initialization
*** Specifying initialization
** Constructor initialization
*** Order of initialization
*** ~static~ data initialization
*** Explicit ~static~ initialization
*** Non-static instance initialization
** Array initialization
*** Variable argument lists
** Enumerated types
** Summary

* TODO 7 Access Control
** 7.1 An Overview of the Collections Framework
** 7.2 Iterators
** 7.3 Sets
** 7.4 Maps
** 7.5 Other Collections
*** 7.5.1 Properties
*** 7.5.2 Bit Sets
*** 7.5.3 Enumeration Sets and Maps
*** 7.5.4 Stacks, Queues, Deques, and Priority Queues
*** 7.5.5 Weak Hash Maps
** 7.6 Views
*** 7.6.1 Ranges
*** 7.6.2 Empty and Singleton Views
*** 7.6.3 Unmodifiable Views
** Exercises

* TODO 8 Reusing Classes
** 8.1 From Iterating to Stream Operations
** 8.2 Stream Creation
** 8.3 The filter, map, and flatMap Methods
** 8.4 Extracting Substreams and Combining Streams
** 8.5 Other Stream Transformations
** 8.6 Simple Reductions
** 8.7 The Optional Type
*** 8.7.1 How to Work with Optional Values
*** 8.7.2 How Not to Work with Optional Values
*** 8.7.3 Creating Optional Values
*** 8.7.4 Composing Optional Value Functions with flatMap
** 8.8 Collecting Results
** 8.9 Collecting into Maps
** 8.10 Grouping and Partitioning
** 8.11 Downstream Collectors
** 8.12 Reduction Operations
** 8.13 Primitive Type Streams
** 8.14 Parallel Streams
** Exercises

* TODO 9 Polymorphism
** 9.1 Input/Output Streams, Readers, and Writers
*** 9.1.1 Obtaining Streams
*** 9.1.2 Reading Bytes
*** 9.1.3 Writing Bytes
*** 9.1.4 Character Encodings
*** 9.1.5 Text Input
*** 9.1.6 Text Output
*** 9.1.7 Reading and Writing Binary Data
*** 9.1.8 Random-Access Files
*** 9.1.9 Memory-Mapped Files
*** 9.1.10 File Locking
** 9.2 Paths, Files, and Directories
*** 9.2.1 Paths
*** 9.2.2 Creating Files and Directories
*** 9.2.3 Copying, Moving, and Deleting Files
*** 9.2.4 Visiting Directory Entries
*** 9.2.5 ZIP File Systems
** 9.3 URL Connections
** 9.4 Regular Expressions
*** 9.4.1 The Regular Expression Syntax
*** 9.4.2 Finding One or All Matches
*** 9.4.3 Groups
*** 9.4.4 Removing or Replacing Matches
*** 9.4.5 Flags
** 9.5 Serialization
*** 9.5.1 The Serializable Interface
*** 9.5.2 Transient Instance Variables
*** 9.5.3 The readObject and writeObject Methods
*** 9.5.4 The readResolve and writeReplace Methods
*** 9.5.5 Versioning
** Exercises

* TODO 10 Interfaces
** 10.1 Concurrent Tasks
*** 10.1.1 Running Tasks
*** 10.1.2 Futures and Executor Services
** 10.2 Thread Safety
*** 10.2.1 Visibility
*** 10.2.2 Race Conditions
*** 10.2.3 Strategies for Safe Concurrency
*** 10.2.4 Immutable Classes
** 10.3 Parallel Algorithms
*** 10.3.1 Parallel Streams
*** 10.3.2 Parallel Array Operations
** 10.4 Threadsafe Data Structures
*** 10.4.1 Concurrent Hash Maps
*** 10.4.2 Blocking Queues
*** 10.4.3 Other Threadsafe Data Structures
** 10.5 Atomic Values
** 10.6 Locks
*** 10.6.1 Reentrant Locks
*** 10.6.2 The synchronized Keyword
*** 10.6.3 Waiting on Conditions
** 10.7 Threads
*** 10.7.1 Starting a Thread
*** 10.7.2 Thread Interruption
*** 10.7.3 Thread-Local Variables
*** 10.7.4 Miscellaneous Thread Properties
** 10.8 Asynchronous Computations
*** 10.8.1 Long-Running Tasks in User Interface Callbacks
*** 10.8.2 Completable Futures
** 10.9 Processes
*** 10.9.1 Building a Process
*** 10.9.2 Running a Process
** Exercises

* TODO 11 Inner Classes
** 11.1 Using Annotations
*** 11.1.1 Annotation Elements
*** 11.1.2 Multiple and Repeated Annotations
*** 11.1.3 Annotating Declarations
*** 11.1.4 Annotating Type Uses
*** 11.1.5 Making Receivers Explicit
** 11.2 Defining Annotations
** 11.3 Standard Annotations
*** 11.3.1 Annotations for Compilation
*** 11.3.2 Annotations for Managing Resources
*** 11.3.3 Meta-Annotations
** 11.4 Processing Annotations at Runtime
** 11.5 Source-Level Annotation Processing
*** 11.5.1 Annotation Processors
*** 11.5.2 The Language Model API
*** 11.5.3 Using Annotations to Generate Source Code
** Exercises

* TODO 12 Holding Your Objects
** 12.1 The Time Line
** 12.2 Local Dates
** 12.3 Date Adjusters
** 12.4 Local Time
** 12.5 Zoned Time
** 12.6 Formatting and Parsing
** 12.7 Interoperating with Legacy Code
** Exercises

* TODO 13 Error Handling with Exceptions
** 13.1 Locales
*** 13.1.1 Specifying a Locale
*** 13.1.2 The Default Locale
*** 13.1.3 Display Names
** 13.2 Number Formats
** 13.3 Currencies
** 13.4 Date and Time Formatting
** 13.5 Collation and Normalization
** 13.6 Message Formatting
** 13.7 Resource Bundles
*** 13.7.1 Organizing Resource Bundles
*** 13.7.2 Bundle Classes
** 13.8 Character Encodings
** 13.9 Preferences
** Exercises

* DONE 14 Strings
  CLOSED: [2017-04-17 Mon 22:05]
** 14.1 Immutable ~Strings~
** 14.2 Overloading '\plus' vs. ~StringBuilder~
** 14.3 Unintended recursion
** 14.4 Operations on Strings
** 14.5 Formatting output
*** ~printf()~
*** ~System.out.format()~
*** The ~Formatter~ class
*** Format specifiers
*** ~Formatter~ conversions
*** ~String.format()~
** 14.6 Regular expressions
*** Basics
*** Creating regular expressions
*** Quantifiers
*** ~Pattern~ and ~Matcher~
*** ~split()~
*** Replace operations
*** ~reset()~
*** Regular expressions and Java I/O
** 14.7 Scanning input
*** ~Scanner~ delimiters
*** Scanning with regular expressions
** 14.8 ~StringTokenizer~
** Summary

* TODO 15 Type Information
* TODO 16 Generics
* DONE 17 Arrays
  CLOSED: [2017-04-17 Mon 22:59]
** Why arrays are special
** Arrays are first-class objects
** Returning an array Multidimensional arrays
** Arrays and generics
** Creating test data
*** ~Arrays.fill()~
*** Data ~Generators~
*** Creating arrays from ~Generators~
** ~Arrays~ utilities
*** Copying an array
*** Comparing arrays
*** Array element comparisons
*** Sorting an array
*** Searching a sorted array
** Summary
* DONE 18 Containers in Depth
  CLOSED: [2017-04-23 Sun 00:44]
** Full container taxonomy
** Filling containers
*** A ~Generator~ solution
*** ~Map~ generators
*** Using ~Abstract~ classes
** ~Collection~ functionality
** Optional operations
*** Unsupported operations
** ~List~ functionality
** ~Set~s and storage order
*** ~SortedSet~
** Queues
*** Priority queues
*** Deques
** Understanding ~Map~s
*** Performance
*** ~SortedMap~
*** ~LinkedHashMap~
** Hashing and hash codes
*** Understanding ~hashCode()~
*** Hashing for speed
*** Overriding ~hashCode()~
** Choosing an implementation
*** A performance test framework
*** Choosing between ~List~s
*** Microbenchmarking dangers
*** Choosing between ~Set~s
*** Choosing between ~Map~s
** Utilities
*** Sorting and searching ~List~s
*** Making a ~Collection~ or ~Map~ unmodifiable
*** Synchronizing a ~Collection~ or ~Map~
** Holding references
*** The ~WeakHashMap~
** Java 1.0/1.1 containers
*** ~Vector~ & ~Enumeration~
*** ~Hashtable~
*** ~Stack~
*** ~BitSet~
** Summary
* TODO 19 I/O
* TODO 20 Enumerated Types
* DONE 21 Annotations
  CLOSED: [2017-04-23 Sun 00:25]
** Basic syntax
*** Defining annotations
*** Meta-annotations
** Writing annotation processors
*** Annotation elements
*** Default value constraints
*** Generating external files
*** Annotation don't support inheritance
*** Implementing the processor
** Using ~apt~ to process annotations
** Using the /Visitor/ pattern with ~apt~
** Annotation-based unit testing
*** Using ~@Unit~ with generics
*** No "suites" necessary
*** Implementing ~@Unit~
*** Removing test code
** Summary
* TODO 22 Concurrency
** 22.1  The many faces of concurrency
** 22.2  Basic threading
** 22.3  Sharing resources
** 22.4  Terminating tasks
** 22.5  Cooperation between tasks
** 22.6  Deadlock
** 22.7  New library components
** 22.8  Simulation
** 22.9  Performance tuning
** 22.10 Active objects
** 22.11 Summary
* 23 Graphical User Interfaces
* DONE A: Supplements
  CLOSED: [2017-04-23 Sun 00:19]
** Downloadable supplements
** Thinking in C: Foundations for Java
** Thinking in Java seminar
** Hands-On Java seminar-on-CD
** Thinking in Objects seminar
** Thinking in Enterprise Java
** Thinking in Patterns (with Java)
** Thinking in Patterns seminar
** Design consulting and reviews
* DONE B: Resources
  CLOSED: [2017-04-17 Mon 23:44]
