#+TITLE: Pthreads Programming
#+VERSION: 1998, minor corrections
#+AUTHOR: Bradford Nichols, Dick Buttlar, and Jacqueline Proulx Farrell
#+STARTUP: entitiespretty

* Table of Contents                                      :TOC_4_org:noexport:
- [[Preface][Preface]]
  - [[Organization][Organization]]
  - [[Example Programs][Example Programs]]
    - [[FTP][FTP]]
  - [[Typographical Conventions][Typographical Conventions]]
  - [[Acknowledgments][Acknowledgments]]
- [[Chapter 1. Why Threads][Chapter 1. Why Threads]]
  - [[Overview][Overview]]
  - [[What Are Pthreads?][What Are Pthreads?]]
  - [[Potential Parallelism][Potential Parallelism]]
  - [[Specifying Potential Parallelism in a Concurrent Programming Environment][Specifying Potential Parallelism in a Concurrent Programming Environment]]
    - [[UNIX Concurrent Programming: Multiple Processes][UNIX Concurrent Programming: Multiple Processes]]
    - [[Pthreads Concurrent Programming: Multiple Threads][Pthreads Concurrent Programming: Multiple Threads]]
  - [[Parallel vs. Concurrent Programming][Parallel vs. Concurrent Programming]]
  - [[Synchronization][Synchronization]]
    - [[Sharing Process Resources][Sharing Process Resources]]
    - [[Communication][Communication]]
    - [[Scheduling][Scheduling]]
  - [[Who Am I? Who Are You?][Who Am I? Who Are You?]]
  - [[Terminating Thread Execution][Terminating Thread Execution]]
    - [[Exit Status and Return Values][Exit Status and Return Values]]
    - [[Pthreads Library Calls and Errors][Pthreads Library Calls and Errors]]
  - [[Why Use Threads Over Processes?][Why Use Threads Over Processes?]]
  - [[A Structured Programming Environment][A Structured Programming Environment]]
  - [[Choosing Which Applications to Thread][Choosing Which Applications to Thread]]
- [[Chapter 2. Designing Threaded Programs][Chapter 2. Designing Threaded Programs]]
  - [[Overview][Overview]]
  - [[Suitable Tasks for Threading][Suitable Tasks for Threading]]
  - [[Models][Models]]
    - [[Boss/Worker Model][Boss/Worker Model]]
    - [[Peer Model][Peer Model]]
    - [[Pipeline Model][Pipeline Model]]
  - [[Buffering Data Between Threads][Buffering Data Between Threads]]
  - [[Some Common Problems][Some Common Problems]]
  - [[Performance][Performance]]
  - [[Example: An ATM Server][Example: An ATM Server]]
    - [[The Serial ATM Server][The Serial ATM Server]]
    - [[The Multithreaded ATM Server][The Multithreaded ATM Server]]
  - [[Example: A Matrix Multiplication Program][Example: A Matrix Multiplication Program]]
    - [[The Serial Matrix-Multiply Program][The Serial Matrix-Multiply Program]]
    - [[The Multithreaded Matrix-Multiply Program][The Multithreaded Matrix-Multiply Program]]
- [[Chapter 3. Synchronizing Pthreads][Chapter 3. Synchronizing Pthreads]]
  - [[Overview][Overview]]
  - [[Selecting the Right Synchronization Tool][Selecting the Right Synchronization Tool]]
  - [[Mutex Variables][Mutex Variables]]
    - [[Using Mutexes][Using Mutexes]]
    - [[Error Detection and Return Values][Error Detection and Return Values]]
    - [[Using pthread_mutex_trylock][Using pthread_mutex_trylock]]
    - [[When Other Tools Are Better][When Other Tools Are Better]]
    - [[Some Shortcomings of Mutexes][Some Shortcomings of Mutexes]]
    - [[Contention for a Mutex][Contention for a Mutex]]
    - [[Example: Using Mutexes in a Linked List][Example: Using Mutexes in a Linked List]]
    - [[Complex Data Structures and Lock Granularity][Complex Data Structures and Lock Granularity]]
    - [[Requirements and Goals for Synchronization][Requirements and Goals for Synchronization]]
    - [[Access Patterns and Granularity][Access Patterns and Granularity]]
    - [[Locking Hierarchies][Locking Hierarchies]]
    - [[Sharing a Mutex Among Processes][Sharing a Mutex Among Processes]]
  - [[Condition Variables][Condition Variables]]
    - [[Using a Mutex with a Condition Variable][Using a Mutex with a Condition Variable]]
    - [[When Many Threads Are Waiting][When Many Threads Are Waiting]]
    - [[Checking the Condition on Wake Up: Spurious Wake Ups][Checking the Condition on Wake Up: Spurious Wake Ups]]
    - [[Condition Variable Attributes][Condition Variable Attributes]]
    - [[Condition Variables and UNIX Signals][Condition Variables and UNIX Signals]]
    - [[Condition Variables and Cancellation][Condition Variables and Cancellation]]
  - [[Reader/Writer Locks][Reader/Writer Locks]]
  - [[Synchronization in the ATM Server][Synchronization in the ATM Server]]
    - [[Synchronizing Access to Account Data][Synchronizing Access to Account Data]]
    - [[Limiting the Number of Worker Threads][Limiting the Number of Worker Threads]]
    - [[Synchronizing a Server Shutdown][Synchronizing a Server Shutdown]]
  - [[Thread Pools][Thread Pools]]
    - [[An ATM Server Example That Uses a Thread Pool][An ATM Server Example That Uses a Thread Pool]]
- [[Chapter 4. Managing Pthreads][Chapter 4. Managing Pthreads]]
  - [[Overview][Overview]]
  - [[Setting Thread Attributes][Setting Thread Attributes]]
    - [[Setting a Thread's Stack Size][Setting a Thread's Stack Size]]
    - [[Setting a Thread's Detached State][Setting a Thread's Detached State]]
    - [[Setting Multiple Attributes][Setting Multiple Attributes]]
    - [[Destroying a Thread Attribute Object][Destroying a Thread Attribute Object]]
  - [[The ~pthread_once~ Mechanism][The ~pthread_once~ Mechanism]]
    - [[Example: The ATM Server's Communication Module][Example: The ATM Server's Communication Module]]
  - [[Keys: Using Thread-Specific Data][Keys: Using Thread-Specific Data]]
    - [[Initializing a Key: pthread_key_create][Initializing a Key: pthread_key_create]]
    - [[Associating Data with a Key][Associating Data with a Key]]
    - [[Retrieving Data from a Key][Retrieving Data from a Key]]
    - [[Destructors][Destructors]]
  - [[Cancellation][Cancellation]]
    - [[The Complication with Cancellation][The Complication with Cancellation]]
    - [[Cancelability Types and States][Cancelability Types and States]]
    - [[Cancellation Points: More on Deferred Cancellation][Cancellation Points: More on Deferred Cancellation]]
    - [[A Simple Cancellation Example][A Simple Cancellation Example]]
    - [[Cleanup Stacks][Cleanup Stacks]]
    - [[Cancellation in the ATM Server][Cancellation in the ATM Server]]
  - [[Scheduling Pthreads][Scheduling Pthreads]]
    - [[Scheduling Priority and Policy][Scheduling Priority and Policy]]
    - [[Scheduling Scope and Allocation Domains][Scheduling Scope and Allocation Domains]]
    - [[Runnable and Blocked Threads][Runnable and Blocked Threads]]
    - [[Scheduling Priority][Scheduling Priority]]
    - [[Scheduling Policy][Scheduling Policy]]
    - [[Using Priorities and Policies][Using Priorities and Policies]]
    - [[Setting Scheduling Policy and Priority][Setting Scheduling Policy and Priority]]
    - [[Inheritance][Inheritance]]
    - [[Scheduling in the ATM Server][Scheduling in the ATM Server]]
  - [[Mutex Scheduling Attributes][Mutex Scheduling Attributes]]
    - [[Priority Ceiling][Priority Ceiling]]
    - [[Priority Inheritance][Priority Inheritance]]
    - [[The ATM Example and Priority Inversion][The ATM Example and Priority Inversion]]
- [[Chapter 5. Pthreads and UNIX][Chapter 5. Pthreads and UNIX]]
  - [[Overview][Overview]]
  - [[Threads and Signals][Threads and Signals]]
    - [[Traditional Signal Processing][Traditional Signal Processing]]
    - [[Signal Processing in a Multithreaded World][Signal Processing in a Multithreaded World]]
    - [[Threads in Signal Handlers][Threads in Signal Handlers]]
    - [[A Simple Example][A Simple Example]]
    - [[Some Signal Issues][Some Signal Issues]]
    - [[Handling Signals in the ATM Example][Handling Signals in the ATM Example]]
  - [[Threadsafe Library Functions and System Calls][Threadsafe Library Functions and System Calls]]
    - [[Threadsafe and Reentrant Functions][Threadsafe and Reentrant Functions]]
    - [[Example of Thread-Unsafe and Threadsafe Versions of the Same Function][Example of Thread-Unsafe and Threadsafe Versions of the Same Function]]
    - [[Functions That Return Pointers to Static Data][Functions That Return Pointers to Static Data]]
    - [[Library Use of errno][Library Use of errno]]
    - [[The Pthreads Standard Specifies Which Functions Must Be Threadsafe][The Pthreads Standard Specifies Which Functions Must Be Threadsafe]]
    - [[Using Thread-Unsafe Functions in a Multithreaded Program][Using Thread-Unsafe Functions in a Multithreaded Program]]
  - [[Cancellation-Safe Library Functions and System Calls][Cancellation-Safe Library Functions and System Calls]]
    - [[Asynchronous Cancellation-Safe Functions][Asynchronous Cancellation-Safe Functions]]
    - [[Cancellation Points in System and Library Calls][Cancellation Points in System and Library Calls]]
  - [[Thread-Blocking Library Functions and System Calls][Thread-Blocking Library Functions and System Calls]]
  - [[Threads and Process Management][Threads and Process Management]]
    - [[Calling fork from a Thread][Calling fork from a Thread]]
    - [[Calling exec from a Thread][Calling exec from a Thread]]
    - [[Process Exit and Threads][Process Exit and Threads]]
  - [[Multiprocessor Memory Synchronization][Multiprocessor Memory Synchronization]]
- [[Chapter 6. Practical Considerations][Chapter 6. Practical Considerations]]
  - [[Overview][Overview]]
  - [[Understanding Pthreads Implementation][Understanding Pthreads Implementation]]
    - [[Two Worlds][Two Worlds]]
    - [[Two Kinds of Threads][Two Kinds of Threads]]
    - [[Who's Providing the Thread?][Who's Providing the Thread?]]
  - [[Debugging][Debugging]]
    - [[Deadlock][Deadlock]]
    - [[Race Conditions][Race Conditions]]
    - [[Event Ordering][Event Ordering]]
    - [[Less Is Better][Less Is Better]]
    - [[Trace Statements][Trace Statements]]
    - [[Debugger Support for Threads][Debugger Support for Threads]]
    - [[Example: Debugging the ATM Server][Example: Debugging the ATM Server]]
  - [[Performance][Performance]]
    - [[The Costs of Sharing Too Much—Locking][The Costs of Sharing Too Much—Locking]]
    - [[Thread Overhead][Thread Overhead]]
    - [[Synchronization Overhead][Synchronization Overhead]]
    - [[How Do Your Threads Spend Their Time?][How Do Your Threads Spend Their Time?]]
    - [[Performance in the ATM Server Example][Performance in the ATM Server Example]]
  - [[Conclusion][Conclusion]]
- [[Appendix A. Pthreads and DCE][Appendix A. Pthreads and DCE]]
  - [[The Structure of a DCE Server][The Structure of a DCE Server]]
  - [[What Does the DCE Programmer Have to Do?][What Does the DCE Programmer Have to Do?]]
  - [[Example: The ATM as a DCE Server][Example: The ATM as a DCE Server]]
- [[Appendix B. Pthreads Draft 4 vs. the Final Standard][Appendix B. Pthreads Draft 4 vs. the Final Standard]]
  - [[Detaching a Thread][Detaching a Thread]]
  - [[Mutex Variables][Mutex Variables]]
  - [[Condition Variables][Condition Variables]]
  - [[Thread Attributes][Thread Attributes]]
  - [[The ~pthread_once~ Function][The ~pthread_once~ Function]]
  - [[Keys][Keys]]
  - [[Cancellation][Cancellation]]
  - [[Scheduling][Scheduling]]
  - [[Signals][Signals]]
  - [[Threadsafe System Interfaces][Threadsafe System Interfaces]]
  - [[Error Reporting][Error Reporting]]
  - [[System Interfaces and Cancellation-Safety][System Interfaces and Cancellation-Safety]]
  - [[Process-Blocking Calls][Process-Blocking Calls]]
  - [[Process Management][Process Management]]
- [[Appendix C. Pthreads Quick Reference][Appendix C. Pthreads Quick Reference]]

* Preface 
** Organization 
** Example Programs
*** FTP

** Typographical Conventions
** Acknowledgments

* Chapter 1. Why Threads
** Overview
** What Are Pthreads?
** Potential Parallelism
** Specifying Potential Parallelism in a Concurrent Programming Environment
*** UNIX Concurrent Programming: Multiple Processes
*** Pthreads Concurrent Programming: Multiple Threads

** Parallel vs. Concurrent Programming
** Synchronization
*** Sharing Process Resources
*** Communication
*** Scheduling

** Who Am I? Who Are You?
** Terminating Thread Execution
*** Exit Status and Return Values
*** Pthreads Library Calls and Errors

** Why Use Threads Over Processes?
** A Structured Programming Environment
** Choosing Which Applications to Thread

* Chapter 2. Designing Threaded Programs
** Overview
** Suitable Tasks for Threading
** Models
*** Boss/Worker Model
*** Peer Model
*** Pipeline Model

** Buffering Data Between Threads
** Some Common Problems
** Performance
** Example: An ATM Server
*** The Serial ATM Server
*** The Multithreaded ATM Server

** Example: A Matrix Multiplication Program
*** The Serial Matrix-Multiply Program
*** The Multithreaded Matrix-Multiply Program

* Chapter 3. Synchronizing Pthreads
** Overview
** Selecting the Right Synchronization Tool
** Mutex Variables
*** Using Mutexes
*** Error Detection and Return Values
*** Using pthread_mutex_trylock
*** When Other Tools Are Better
*** Some Shortcomings of Mutexes
*** Contention for a Mutex
*** Example: Using Mutexes in a Linked List
*** Complex Data Structures and Lock Granularity
*** Requirements and Goals for Synchronization
*** Access Patterns and Granularity
*** Locking Hierarchies
*** Sharing a Mutex Among Processes

** Condition Variables
*** Using a Mutex with a Condition Variable
*** When Many Threads Are Waiting
*** Checking the Condition on Wake Up: Spurious Wake Ups
*** Condition Variable Attributes
*** Condition Variables and UNIX Signals
*** Condition Variables and Cancellation

** Reader/Writer Locks
** Synchronization in the ATM Server
*** Synchronizing Access to Account Data
*** Limiting the Number of Worker Threads
*** Synchronizing a Server Shutdown

** Thread Pools
*** An ATM Server Example That Uses a Thread Pool

* Chapter 4. Managing Pthreads
** Overview
** Setting Thread Attributes
*** Setting a Thread's Stack Size
*** Setting a Thread's Detached State
*** Setting Multiple Attributes
*** Destroying a Thread Attribute Object

** The ~pthread_once~ Mechanism
*** Example: The ATM Server's Communication Module

** Keys: Using Thread-Specific Data
*** Initializing a Key: pthread_key_create
*** Associating Data with a Key
*** Retrieving Data from a Key
*** Destructors

** Cancellation
*** The Complication with Cancellation
*** Cancelability Types and States
*** Cancellation Points: More on Deferred Cancellation
*** A Simple Cancellation Example
*** Cleanup Stacks
*** Cancellation in the ATM Server

** Scheduling Pthreads
*** Scheduling Priority and Policy
*** Scheduling Scope and Allocation Domains
*** Runnable and Blocked Threads
*** Scheduling Priority
*** Scheduling Policy
*** Using Priorities and Policies
*** Setting Scheduling Policy and Priority
*** Inheritance
*** Scheduling in the ATM Server

** Mutex Scheduling Attributes
*** Priority Ceiling
*** Priority Inheritance
*** The ATM Example and Priority Inversion

* Chapter 5. Pthreads and UNIX
** Overview
** Threads and Signals
*** Traditional Signal Processing
*** Signal Processing in a Multithreaded World
*** Threads in Signal Handlers
*** A Simple Example
*** Some Signal Issues
*** Handling Signals in the ATM Example

** Threadsafe Library Functions and System Calls
*** Threadsafe and Reentrant Functions
*** Example of Thread-Unsafe and Threadsafe Versions of the Same Function
*** Functions That Return Pointers to Static Data
*** Library Use of errno
*** The Pthreads Standard Specifies Which Functions Must Be Threadsafe
*** Using Thread-Unsafe Functions in a Multithreaded Program

** Cancellation-Safe Library Functions and System Calls
*** Asynchronous Cancellation-Safe Functions
*** Cancellation Points in System and Library Calls

** Thread-Blocking Library Functions and System Calls
** Threads and Process Management
*** Calling fork from a Thread
*** Calling exec from a Thread
*** Process Exit and Threads

** Multiprocessor Memory Synchronization

* Chapter 6. Practical Considerations
** Overview
** Understanding Pthreads Implementation
*** Two Worlds
*** Two Kinds of Threads
*** Who's Providing the Thread?

** Debugging
*** Deadlock
*** Race Conditions
*** Event Ordering
*** Less Is Better
*** Trace Statements
*** Debugger Support for Threads
*** Example: Debugging the ATM Server

** Performance
*** The Costs of Sharing Too Much—Locking
*** Thread Overhead
*** Synchronization Overhead
*** How Do Your Threads Spend Their Time?
*** Performance in the ATM Server Example

** Conclusion

* Appendix A. Pthreads and DCE
** The Structure of a DCE Server
** What Does the DCE Programmer Have to Do?
** Example: The ATM as a DCE Server

* Appendix B. Pthreads Draft 4 vs. the Final Standard
** Detaching a Thread
** Mutex Variables
** Condition Variables
** Thread Attributes
** The ~pthread_once~ Function
** Keys
** Cancellation
** Scheduling
** Signals
** Threadsafe System Interfaces
** Error Reporting
** System Interfaces and Cancellation-Safety
** Process-Blocking Calls
** Process Management

* Appendix C. Pthreads Quick Reference
