#+TITLE: Mastering Regular Expressions
#+VERSION: 2006
#+AUTHOR: Jeffrey E.F. Friedl
#+STARTUP: entitiespretty

* Preface
** The Need for This Book
** Intended Audience
** How to Read This book
** Organization
** Typographical Conventions
** Exercises
** Links, Code, Errata, and Contacts
** Personal Comments and Acknowledgments
* 1 Introduction to Regular Expressions
* 2 Extended Introductory Examples
* 3 Overview of Regular Expression Features and Flavors
* 4 The Mechanics of Expression Processing
* 5 Practical Regex Techniques
* 6 Crafting an Efficient Expression
* 7 Perl
* TODO 8 Java
  - Java has had a native regex package, ~java.util.regex~,
    since the early-2002 release of Java 1.4.0.
    + It has fairly good Unicode support
    + =TODO= It matches against ~CharSequence~ objects, so it can be quite
      flexible in its application.

  - Officially, this book covers Java 1.5.0.

    Important differences from Java 1.4.2 and the second 1.6 beta will be
    indicated.
    (=TODO= The differences are also summarized at the end of this chapter)

  - *Reliance on Earlier Chapters* 
    =TODO=

  - =TODO=

** TODO Java's Regex Flavor
   - =TODO= ~java.util.regex~ is powered by a /Traditional NFA/ (metioned in
     Chapters 4, 5, and 6).

   - Table 8-2 on the facing page summarizes its metacharacters.
*** TODO Java Support for ~\p{...}~ and ~\P{...}~
     - The ~\p{...}~ and ~\P{...}~ constructs support
       + _Unicode properties and blocks_,
         as well as
       + _special Java character properties_.

     - Unicode support is as of Unicode Version 4.0.0.
       (Java 1.4.2's support is only as of Unicode Version 3.0.0.)
       =FROM JIAN= how about Java 8 and 9???

**** TODO Unicode properties
**** TODO Unicode blocks
**** TODO Special Java character properties
*** TODO Unicode Line Terminators
** Using ~java.util.regex~
** The ~Pattern.compile()~ Factory
*** Pattern's matcher method
** The Matcher Object
*** Applying the Regex
*** Querying Match Results
**** Match-result example
*** Simple Search and Replace
**** Simple search and replace examples
**** The replacement argument
*** Advanced Search and Replace
**** Search-and-replace examples
*** In-Place Search and Replace
**** Using a different-sized replacement
*** The Matcher's Region
**** Points to keep in mind
**** Setting and inspecting region bounds
**** Looking outside the current region
**** Transparent bounds
**** Anchoring bounds
*** Method Chaining
*** Methods for Building a Scanner
**** Examples illustrating ~hitEnd~ and ~requireEnd~
**** The ~hitEnd~ bug and its workaround
*** Other Matcher Methods
**** Querying a matcher's target text
** Other Patter n Methods
*** Pattern's split Method, with One Argument
**** Empty elements with adjacent matches
*** Pattern's split Method, with Two Argument
**** Split with a limit less than zero
**** Split with a limit of zero
**** Split with a limit greater than zero
** Additional Examples
*** Adding Width and Height Attributes to Image Tags
*** Validating HTML with Multiple Patter ns Per Matcher
**** Multiple Patterns and the One-Argument ~find()~
*** Parsing Comma-Separated Values (CSV) Text
** Java Version Differences
*** Differences Between 1.4.2 and 1.5.0
**** New methods in Java 1.5.0
**** Unicode-support differences between 1.4.2 and 1.5.0
*** Differences Between 1.5.0 and 1.6
* 9 .NET
* 10 PHP
